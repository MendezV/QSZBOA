(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    513501,      12313]
NotebookOptionsPosition[    508055,      12129]
NotebookOutlinePosition[    508409,      12145]
CellTagsIndexPosition[    508366,      12142]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"mati1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", "*", "k1", "*", "L"}], "]"}], ",", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", "L"}], "]"}]}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2", "-", 
          RowBox[{"2", "d"}]}], ")"}]}], "]"}], ",", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2", "-", 
          RowBox[{"2", "d"}]}], ")"}]}], "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k2", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k2", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", "0", ",", "0"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", "*", "k2", "*", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "]"}], ",", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "k2", "*", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k1", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "k1"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "k2"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k2", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", 
      RowBox[{"k2", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k2", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", "0", ",", "0"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"k2", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k2", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "k2"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k2", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "k1"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}], ",", 
      RowBox[{"k1", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}]}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.7149817365939713`*^9, 3.7149817675120373`*^9}, {
   3.714981831826049*^9, 3.714981837841799*^9}, {3.7149819803279037`*^9, 
   3.714981983382921*^9}, {3.714982031743937*^9, 3.714982338679246*^9}, {
   3.714982391074736*^9, 3.714982416503746*^9}, 3.7149833581366253`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}]], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]], 
     ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]], 
     ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]]}], 
     ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]]}], 
     ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
       RowBox[{"(", 
        RowBox[{"L", "-", "L2"}], ")"}]}]], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", 
       RowBox[{"(", 
        RowBox[{"L", "-", "L2"}], ")"}]}]], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}]]}], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]], 
      " ", "k1"}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]]}],
       " ", "k1"}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]]}],
       " ", "k2"}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]], 
      " ", "k2"}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}]], " ", "k2"}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}]]}], " ", "k2"}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}]]}], " ", "k1"}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}]], " ", "k1"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7149824178797607`*^9, 3.714983359029119*^9, 
  3.715577166462182*^9, 3.7318742860493593`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mati12", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", "*", "k1", "*", "L"}], "]"}], ",", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", "L"}], "]"}]}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2", "-", 
          RowBox[{"2", "d"}]}], ")"}]}], "]"}], ",", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2", "-", 
          RowBox[{"2", "d"}]}], ")"}]}], "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", "0", ",", "0"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "-", "r"}], "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "]"}], ",", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "-", "r"}], "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k1", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "k1"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "k1"}], "*", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", "r"}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", 
      RowBox[{"k1", "*", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", "r"}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", "0", ",", "0"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"k1", "*", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", "r"}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "k1"}], "*", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", "r"}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "k1"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}], ",", 
      RowBox[{"k1", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}]}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.7149833639744577`*^9, 3.714983446398479*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}]], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]], 
     ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]], 
     ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]]}], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"L", "-", "L2"}], ")"}], " ", 
       SqrtBox[
        RowBox[{"1", "-", "r"}]]}]], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"L", "-", "L2"}], ")"}], " ", 
       SqrtBox[
        RowBox[{"1", "-", "r"}]]}]], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}]]}], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]], 
      " ", "k1"}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]]}],
       " ", "k1"}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
         SqrtBox[
          RowBox[{"1", "-", "r"}]]}]]}], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r"}]]}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r"}]]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r"}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}], " ", 
         SqrtBox[
          RowBox[{"1", "-", "r"}]]}]]}], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r"}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}]]}], " ", "k1"}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}]], " ", "k1"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7149834476669073`*^9, 3.7155771699244127`*^9, 
  3.715577279494528*^9, 3.731874286448797*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.714982498900847*^9, 3.714982534888898*^9}, 
   3.7149833838820467`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mati2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", "*", "k3", "*", "L"}], "]"}], ",", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "k3", "*", "L"}], "]"}]}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2", "-", 
          RowBox[{"2", "d"}]}], ")"}]}], "]"}], ",", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2", "-", 
          RowBox[{"2", "d"}]}], ")"}]}], "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k2", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k2", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", "0", ",", "0"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", "*", "k2", "*", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "]"}], ",", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "k2", "*", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k3", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k3", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k1", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "k1"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "k2"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k2", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", 
      RowBox[{"k2", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k2", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", "0", ",", "0"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"k2", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k2", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "k2"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k2", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "k3"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k3", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}], ",", 
      RowBox[{"k3", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k3", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}]}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.714982574196944*^9, 3.714982628786676*^9}, 
   3.7318879511071653`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k3", " ", "L"}]], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k3", " ", "L"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]], 
     ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]], 
     ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]]}], 
     ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]]}], 
     ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
       RowBox[{"(", 
        RowBox[{"L", "-", "L2"}], ")"}]}]], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", 
       RowBox[{"(", 
        RowBox[{"L", "-", "L2"}], ")"}]}]], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k3", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}]]}], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k3", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]], 
      " ", "k1"}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]]}],
       " ", "k1"}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]]}],
       " ", "k2"}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]], 
      " ", "k2"}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k2", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}]], " ", "k2"}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k2", " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}]]}], " ", "k2"}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k3", " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}]]}], " ", "k3"}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k3", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}]], " ", "k3"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7149835854705133`*^9, 3.715577175143854*^9, 
  3.715577282798279*^9, 3.731874286680633*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mati22", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "-", "r2"}], "]"}], "*", "L"}], "]"}], ",", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "-", "r2"}], "]"}], "*", "L"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2", "-", 
          RowBox[{"2", "d"}]}], ")"}]}], "]"}], ",", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2", "-", 
          RowBox[{"2", "d"}]}], ")"}]}], "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r1"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r1"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", "0", ",", "0"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "-", "r1"}], "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "]"}], ",", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "-", "r1"}], "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r2"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r2"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k1", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "k1"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "k1"}], "*", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", "r1"}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r1"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", 
      RowBox[{"k1", "*", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", "r1"}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r1"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", "0", ",", "0"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"k1", "*", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", "r1"}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r1"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "k1"}], "*", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", "r1"}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r1"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "k1"}], "*", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", "r2"}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r2"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}], ",", 
      RowBox[{"k1", "*", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", "r2"}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r2"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}]}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.714983566427351*^9, 3.714983748638945*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r2"}]]}]], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r2"}]]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]], 
     ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]], 
     ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]]}], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"L", "-", "L2"}], ")"}], " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}]], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"L", "-", "L2"}], ")"}], " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}]], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r2"}]]}]]}], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r2"}]]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]], 
      " ", "k1"}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]]}],
       " ", "k1"}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}]]}], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}], " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}]]}], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}], " ", 
         SqrtBox[
          RowBox[{"1", "-", "r2"}]]}]]}], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r2"}]]}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r2"}]]}]], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r2"}]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.714982615866373*^9, 3.714982676285344*^9, 
  3.714983749493371*^9, 3.715577203170713*^9, 3.715577241602086*^9, 
  3.715577291664658*^9, 3.731874286877219*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "mati22", "]"}]], "Input",
 CellChangeTimes->{{3.714982680440002*^9, 3.7149826875252247`*^9}, {
   3.714982720787808*^9, 3.7149827615223837`*^9}, {3.7149828846056633`*^9, 
   3.714982894324909*^9}, 3.7149832739093313`*^9, 3.714983811242682*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "k1", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
     RowBox[{"(", 
      RowBox[{"L", "-", "L2"}], ")"}], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L", " ", 
     SqrtBox[
      RowBox[{"1", "-", "r2"}]]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
     RowBox[{"(", 
      RowBox[{"L", "-", "L2"}], ")"}], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r2"}]]}]}]], " ", 
  SuperscriptBox["k1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}], " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], "+", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}], " ", 
         SqrtBox[
          RowBox[{"1", "-", "r2"}]]}]}]]}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
            RowBox[{"(", 
             RowBox[{"L", "-", "L2"}], ")"}], " ", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], "+", 
           RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
            RowBox[{"(", 
             RowBox[{"L", "-", "L2"}], ")"}], " ", 
            SqrtBox[
             RowBox[{"1", "-", "r2"}]]}]}]]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
               ")"}]}], "+", 
             RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}],
               " ", 
              SqrtBox[
               RowBox[{"1", "-", "r1"}]]}]}]]}], "-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
              ")"}]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
             " ", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}]}]], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
               ")"}]}], "+", 
             RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}],
               " ", 
              SqrtBox[
               RowBox[{"1", "-", "r1"}]]}]}]], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
               ")"}]}], "+", 
             RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}],
               " ", 
              SqrtBox[
               RowBox[{"1", "-", "r1"}]]}]}]], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{"L", "-", "L2"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r2"}]]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
               ")"}]}], "+", 
             RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}],
               " ", 
              SqrtBox[
               RowBox[{"1", "-", "r1"}]]}]}]]}], "-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
              ")"}]}], "+", 
            RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
             " ", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}]}]], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
               ")"}]}], "+", 
             RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}],
               " ", 
              SqrtBox[
               RowBox[{"1", "-", "r1"}]]}]}]], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
               ")"}]}], "+", 
             RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}],
               " ", 
              SqrtBox[
               RowBox[{"1", "-", "r1"}]]}]}]], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r2"}]]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
           RowBox[{"(", 
            RowBox[{"L", "-", "L2"}], ")"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
               RowBox[{"(", 
                RowBox[{"L", "-", "L2"}], ")"}], " ", 
               SqrtBox[
                RowBox[{"1", "-", "r1"}]]}], "+", 
              RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
               RowBox[{"(", 
                RowBox[{"L", "-", "L2"}], ")"}], " ", 
               SqrtBox[
                RowBox[{"1", "-", "r2"}]]}]}]]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
                  ")"}]}], "+", 
                RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
                  ")"}], " ", 
                 SqrtBox[
                  RowBox[{"1", "-", "r1"}]]}]}]]}], "-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
                 ")"}]}], "+", 
               RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
                 ")"}], " ", 
                SqrtBox[
                 RowBox[{"1", "-", "r1"}]]}]}]], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
                  ")"}]}], "+", 
                RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
                  ")"}], " ", 
                 SqrtBox[
                  RowBox[{"1", "-", "r1"}]]}]}]], " ", 
              SqrtBox[
               RowBox[{"1", "-", "r1"}]]}], "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
                  ")"}]}], "+", 
                RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
                  ")"}], " ", 
                 SqrtBox[
                  RowBox[{"1", "-", "r1"}]]}]}]], " ", 
              SqrtBox[
               RowBox[{"1", "-", "r1"}]]}]}], ")"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
             RowBox[{"(", 
              RowBox[{"L", "-", "L2"}], ")"}], " ", 
             SqrtBox[
              RowBox[{"1", "-", "r2"}]]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
                  ")"}]}], "+", 
                RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
                  ")"}], " ", 
                 SqrtBox[
                  RowBox[{"1", "-", "r1"}]]}]}]]}], "-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
                 ")"}]}], "+", 
               RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
                 ")"}], " ", 
                SqrtBox[
                 RowBox[{"1", "-", "r1"}]]}]}]], "-", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
                  ")"}]}], "+", 
                RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
                  ")"}], " ", 
                 SqrtBox[
                  RowBox[{"1", "-", "r1"}]]}]}]], " ", 
              SqrtBox[
               RowBox[{"1", "-", "r1"}]]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
                  ")"}]}], "+", 
                RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
                  ")"}], " ", 
                 SqrtBox[
                  RowBox[{"1", "-", "r1"}]]}]}]], " ", 
              SqrtBox[
               RowBox[{"1", "-", "r1"}]]}]}], ")"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{"L", "-", "L2"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
               ")"}]}], "+", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{"L", "-", "L2"}], ")"}], " ", 
              SqrtBox[
               RowBox[{"1", "-", "r1"}]]}], "+", 
             RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}],
               " ", 
              SqrtBox[
               RowBox[{"1", "-", "r1"}]]}], "+", 
             RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{"L", "-", "L2"}], ")"}], " ", 
              SqrtBox[
               RowBox[{"1", "-", "r2"}]]}]}]]}], "-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
              ")"}]}], "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
             RowBox[{"(", 
              RowBox[{"L", "-", "L2"}], ")"}], " ", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
             " ", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
             RowBox[{"(", 
              RowBox[{"L", "-", "L2"}], ")"}], " ", 
             SqrtBox[
              RowBox[{"1", "-", "r2"}]]}]}]], "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
              ")"}]}], "+", 
            RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
             " ", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
             RowBox[{"(", 
              RowBox[{"L", "-", "L2"}], ")"}], " ", 
             SqrtBox[
              RowBox[{"1", "-", "r2"}]]}]}]], "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
              ")"}]}], "+", 
            RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
             " ", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}], "+", 
            RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
             RowBox[{"(", 
              RowBox[{"L", "-", "L2"}], ")"}], " ", 
             SqrtBox[
              RowBox[{"1", "-", "r2"}]]}]}]], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
               ")"}]}], "+", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{"L", "-", "L2"}], ")"}], " ", 
              SqrtBox[
               RowBox[{"1", "-", "r1"}]]}], "+", 
             RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}],
               " ", 
              SqrtBox[
               RowBox[{"1", "-", "r1"}]]}], "+", 
             RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{"L", "-", "L2"}], ")"}], " ", 
              SqrtBox[
               RowBox[{"1", "-", "r2"}]]}]}]], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
               ")"}]}], "+", 
             RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{"L", "-", "L2"}], ")"}], " ", 
              SqrtBox[
               RowBox[{"1", "-", "r1"}]]}], "+", 
             RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}],
               " ", 
              SqrtBox[
               RowBox[{"1", "-", "r1"}]]}], "+", 
             RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{"L", "-", "L2"}], ")"}], " ", 
              SqrtBox[
               RowBox[{"1", "-", "r2"}]]}]}]], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
               ")"}]}], "+", 
             RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}],
               " ", 
              SqrtBox[
               RowBox[{"1", "-", "r1"}]]}], "+", 
             RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{"L", "-", "L2"}], ")"}], " ", 
              SqrtBox[
               RowBox[{"1", "-", "r2"}]]}]}]], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], 
               ")"}]}], "+", 
             RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}],
               " ", 
              SqrtBox[
               RowBox[{"1", "-", "r1"}]]}], "+", 
             RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
              RowBox[{"(", 
               RowBox[{"L", "-", "L2"}], ")"}], " ", 
              SqrtBox[
               RowBox[{"1", "-", "r2"}]]}]}]], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r2"}]]}]}], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r2"}]]}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
          "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
           RowBox[{"(", 
            RowBox[{"L", "-", "L2"}], ")"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
           " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
           RowBox[{"(", 
            RowBox[{"L", "-", "L2"}], ")"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}]}]]}], "-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
         "+", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{"L", "-", "L2"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
          " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{"L", "-", "L2"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r2"}]]}]}]], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
         "+", 
         RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
          " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{"L", "-", "L2"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r2"}]]}]}]], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
         "+", 
         RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
          " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{"L", "-", "L2"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r2"}]]}]}]], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
          "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
           RowBox[{"(", 
            RowBox[{"L", "-", "L2"}], ")"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
           " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
           RowBox[{"(", 
            RowBox[{"L", "-", "L2"}], ")"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}]}]], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
          "+", 
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
           RowBox[{"(", 
            RowBox[{"L", "-", "L2"}], ")"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
           " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
           RowBox[{"(", 
            RowBox[{"L", "-", "L2"}], ")"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}]}]], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
          "+", 
          RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
           " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
           RowBox[{"(", 
            RowBox[{"L", "-", "L2"}], ")"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}]}]], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
          "+", 
          RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
           " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
           RowBox[{"(", 
            RowBox[{"L", "-", "L2"}], ")"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}]}]], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], ")"}], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r2"}]]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.71498330231439*^9, 3.714983813121049*^9, 
  3.715577252254951*^9, 3.715577294568397*^9, 3.731874287256607*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%7", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "7"}], "+", 
      RowBox[{"2", " ", "d", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], ")"}]}], "-", 
      RowBox[{"4", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
  SuperscriptBox["k1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"5", "-", 
         RowBox[{"2", " ", "d"}], "+", 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", "r1"}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", "d", "+", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], ")"}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", "r1"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", "r1"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "4"}], " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "d", "-", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]], "+", 
         RowBox[{"d", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], ")"}]}], "+", "r1"}], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"5", "-", 
         RowBox[{"2", " ", "d"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.715577318238687*^9, 3.731874287624398*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "mati12", "]"}]], "Input",
 CellChangeTimes->{{3.71498384871415*^9, 3.714983849423724*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
     RowBox[{"(", 
      RowBox[{"L", "-", "L2"}], ")"}]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
     RowBox[{"(", 
      RowBox[{"L", "-", "L2"}], ")"}], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r"}]]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r"}]]}]}]], " ", 
  SuperscriptBox["k1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]}]]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]}]]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]}]]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]}]], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r"}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]}]], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r"}]]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]}]], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r"}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]}]], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r"}]]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]}]], " ", "r"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]}]], " ", "r"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]}]], " ", "r"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]}]], " ", "r"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]}]], " ", "r"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]}]], " ", "r"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]}]], " ", "r"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]}]], " ", "r"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.714983850697307*^9, 3.715577258842259*^9, 
  3.715577323408278*^9, 3.731874287967998*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%10", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}]], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "d"}], "-", "L", "+", "L2"}], ")"}]}]], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "d"}], "-", "L", "+", "L2"}], ")"}]}]], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "d"}], "-", "L", "+", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]]}], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "d"}], "-", "L", "+", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"L", "-", "L2"}], ")"}], " ", 
       SqrtBox[
        RowBox[{"1", "-", "r"}]]}]], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"L", "-", "L2"}], ")"}], " ", 
       SqrtBox[
        RowBox[{"1", "-", "r"}]]}]], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}]]}], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "d"}], "-", "L", "+", "L2"}], ")"}]}]], " ", 
      "k1"}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "d"}], "-", "L", "+", "L2"}], ")"}]}]]}], " ", 
      "k1"}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "d"}], "-", "L", "+", "L2"}], ")"}], " ", 
         SqrtBox[
          RowBox[{"1", "-", "r"}]]}]]}], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r"}]]}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "d"}], "-", "L", "+", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r"}]]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r"}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}], " ", 
         SqrtBox[
          RowBox[{"1", "-", "r"}]]}]]}], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r"}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}]]}], " ", "k1"}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}]], " ", "k1"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.715577339150544*^9, 3.731874288190777*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fed", "[", 
   RowBox[{"k1_", ",", "L_", ",", "L2_", ",", "d_", ",", "r_"}], "]"}], ":=", 
  
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
      RowBox[{"(", 
       RowBox[{"L", "-", 
        RowBox[{"2", " ", "L2"}], "+", 
        RowBox[{"2", "d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}], ")"}]}]}], ")"}]}]]}], " ", 
   SuperscriptBox["k1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2", "+", 
          RowBox[{"2", " ", "d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox[
              RowBox[{"1", "-", "r"}]]}], ")"}]}]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r"}]]}], "-", "r"}], ")"}]}], "-", "r", "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "d"}], "-", "L", "+", 
          RowBox[{"2", " ", "L2"}]}], ")"}]}]], " ", "r"}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", 
          RowBox[{"2", " ", "L2"}], "+", 
          RowBox[{"2", " ", "d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox[
              RowBox[{"1", "-", "r"}]]}], ")"}]}]}], ")"}]}]], " ", "r"}], 
     "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "4"}], " ", "\[ImaginaryI]", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r"}]]}]], " ", "r"}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L2"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}], ")"}]}], "+", "r"}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "d"}], "-", "L", "+", "L2"}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r"}]]}], "+", "r"}], ")"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L2", "-", 
          RowBox[{"2", " ", "d", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r"}]]}]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r"}]]}], "+", "r"}], ")"}]}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.7149865684766808`*^9, 3.7149865978031683`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"fed2", "[", 
   RowBox[{"k1_", ",", "L_", ",", "L2_", ",", "d_", ",", "r1_", ",", "r2_"}], 
   "]"}], ":=", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "d", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], ")"}]}], "+", 
       RowBox[{"L2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          SqrtBox[
           RowBox[{"1", "-", "r2"}]]}], ")"}]}], "-", 
       RowBox[{"L", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}]}], ")"}]}]}], ")"}]}]], " ", 
   SuperscriptBox["k1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"L", "-", "L2"}], ")"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{"L", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"r1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"L", "-", "L2"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]], "+", 
             SqrtBox[
              RowBox[{"1", "-", "r2"}]]}], ")"}]}]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "r1"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"L", "-", "L2"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]], "+", 
             SqrtBox[
              RowBox[{"1", "-", "r2"}]]}], ")"}]}]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"r1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}], ")"}]}]}], ")"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
           " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{"L", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"r1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}], ")"}]}]}], ")"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SqrtBox[
           RowBox[{"1", "-", "r1"}]], "+", 
          SqrtBox[
           RowBox[{"1", "-", "r2"}]]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"r1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
           " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{"L", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"r1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
           " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"L", "-", "L2"}], ")"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"r1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"L", "-", "L2"}], ")"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{"L", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "r1"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}], ")"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.7149866576548347`*^9, 3.7149867030295067`*^9}, {
  3.714986765928013*^9, 3.714986786590825*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rootie", "=", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"fed2", "[", 
      RowBox[{"k1", ",", "3", ",", "1", ",", "0.5", ",", "1.8", ",", "0.0"}], 
      "]"}], "\[Equal]", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"k1", ",", "4.5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdyk8oQwEAx/GXg4PawUFKLFYWUSut509am7xyWIpYO9iF0CLEyoGw2oZa
CElMZkXKn2yzXdRs5d9CKLHQJi3Da0OeoR7zfu/w7XP55jR21jYnEQSRyQXL
jbLV/Q1aIUyn12BblvkEit2qczjtNIQg01Eagf2B1ijco954tz7MDGzZOf6C
kZgg94DzfpHMh7OkvQiy7cNS+BK6lUPvVBcF1XOSanitjdZAARlvgBWjfRoo
1UubYXZQwesZybDCn6dsG1zxuboPOb9/h3SwmHKaI5u0Yr3ljjc+MzUDfzbI
BZhIEy/B5CalDYoKXGF4M1n3COVny3lPnOHxz0Lo6PXLIHFBVcKEMrUKXvok
vNar/vkY56AjxQL/9GVbkM2X2OGDyOCFWtUE75tJHYCaoDsIJ53+egafheXd
HTD1QGHJPC8VOBqCzOuYHm4/ewzsKa3QvWcY4T8FsxTi
  "]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"k1", "\[Rule]", 
   RowBox[{"5.43442629298322`", "\[VeryThinSpace]", "-", 
    RowBox[{"1.1948037575722236`*^-13", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7149853127464247`*^9, 3.714985335450499*^9}, {
   3.714985575156205*^9, 3.714985605047646*^9}, 3.71498579089872*^9, 
   3.7149858406391706`*^9, 3.714985893753578*^9, 3.714985927235847*^9, {
   3.714986281496161*^9, 3.714986314990316*^9}, 3.7149863903112288`*^9, {
   3.714986503870384*^9, 3.714986540318018*^9}, {3.714986640240991*^9, 
   3.714986647373608*^9}, 3.714986733142454*^9, {3.714986771514756*^9, 
   3.714986794837418*^9}, {3.714987266010887*^9, 3.714987281756587*^9}, {
   3.714988950717649*^9, 3.714988964867386*^9}, 3.715104220161026*^9, 
   3.7155776489569483`*^9, 3.715578983826792*^9, {3.71557906443414*^9, 
   3.715579114430725*^9}, {3.715579148516034*^9, 3.7155791552648373`*^9}, {
   3.715579689657778*^9, 3.71557969941016*^9}, {3.715580231185603*^9, 
   3.71558026455582*^9}, {3.715580407944376*^9, 3.715580482449831*^9}, 
   3.7155934414240713`*^9, 3.715593616789366*^9, 3.715593733179596*^9, {
   3.7155939234787273`*^9, 3.71559397435179*^9}, 3.715605170503757*^9, 
   3.715605417828835*^9, 3.715605517055072*^9, 3.731874289103796*^9, 
   3.731874857868764*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"mati221", "[", 
   RowBox[{"k1_", ",", "L_", ",", "L2_", ",", "d_", ",", "r1_", ",", "r2_"}], 
   "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "-", "r2"}], "]"}], "*", "L"}], "]"}], ",", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "-", "r2"}], "]"}], "*", "L"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2", "-", 
          RowBox[{"2", "d"}]}], ")"}]}], "]"}], ",", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2", "-", 
          RowBox[{"2", "d"}]}], ")"}]}], "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r1"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r1"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", "0", ",", "0"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"Exp", "[", 
       RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "-", "r1"}], "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "]"}], ",", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "-", "r1"}], "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "]"}], ",", 
      RowBox[{"-", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r2"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r2"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"k1", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "k1"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "k1"}], "*", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", "r1"}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r1"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", 
      RowBox[{"k1", "*", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", "r1"}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r1"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "-", 
           RowBox[{"2", "d"}]}], ")"}]}], "]"}]}], ",", "0", ",", "0"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"k1", "*", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", "r1"}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r1"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "k1"}], "*", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", "r1"}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r1"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", "k1"}], "*", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", "r2"}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r2"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}], ",", 
      RowBox[{"k1", "*", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", "r2"}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], "*", "k1", "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", "r2"}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}], "]"}]}]}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.714987104592993*^9, 3.7149871191044407`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Coefs", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"NullSpace", "[", 
    RowBox[{
     RowBox[{"mati221", "[", 
      RowBox[{"k1", ",", "3", ",", "1", ",", "0.5", ",", "1.8", ",", "0.0"}], 
      "]"}], "/.", 
     RowBox[{"Rootie", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.714987139246306*^9, 3.714987180077649*^9}, 
   3.7149872122797413`*^9, {3.714987257501252*^9, 3.71498725947188*^9}, 
   3.7149873234048243`*^9, {3.714987407426778*^9, 3.714987413714161*^9}, 
   3.714987510286398*^9, {3.714987548294867*^9, 3.714987549958045*^9}, 
   3.714988938648596*^9, 3.714988977065242*^9, {3.715578967506723*^9, 
   3.715579011393022*^9}, 3.7155791653262*^9, {3.715579224962371*^9, 
   3.715579240912855*^9}, {3.71557971234068*^9, 3.715579716443618*^9}, {
   3.7155798526862707`*^9, 3.7155799513534822`*^9}, 3.715580019432412*^9, {
   3.715580103537161*^9, 3.715580116110917*^9}, {3.715580493923729*^9, 
   3.7155804992356052`*^9}, {3.7155934526630983`*^9, 
   3.7155934528208237`*^9}, {3.715593625810494*^9, 3.715593635806438*^9}, {
   3.715593741712262*^9, 3.7155937456779633`*^9}, {3.7156053579177227`*^9, 
   3.715605359499797*^9}, {3.715605408435719*^9, 3.715605409026664*^9}, {
   3.731874862813148*^9, 3.731874864634718*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.005199407379850246`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.00007122454564713366`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.005199407379853907`"}], "+", 
    RowBox[{"0.00007122454564713366`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.013696563335801992`"}], "-", 
    RowBox[{"0.9998521133209765`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "6.363379348624243`*^-9"}], "-", 
    RowBox[{"4.6452807954501177`*^-7", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.004265020816981563`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.002974644091031948`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.004344902008389148`"}], "-", 
    RowBox[{"0.002856700294937172`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.715580117277524*^9, 3.715580236866416*^9, 3.715580269048975*^9, {
   3.715580414251587*^9, 3.715580463002612*^9}, 3.71558050012389*^9, {
   3.715593448494246*^9, 3.715593453131105*^9}, {3.715593621514288*^9, 
   3.715593636361333*^9}, {3.7155937376460123`*^9, 3.715593746102106*^9}, 
   3.7156053603540077`*^9, 3.715605423730439*^9, 3.7156055267040462`*^9, 
   3.731874289338656*^9, 3.73187486526963*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"k11", "=", 
  RowBox[{"k1", "/.", 
   RowBox[{"Rootie", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.715579558215921*^9, 3.715579564368793*^9}, {
  3.715579595336082*^9, 3.715579598448512*^9}, {3.7155801973656*^9, 
  3.7155802167028646`*^9}}],

Cell[BoxData[
 RowBox[{"5.43442629298322`", "\[VeryThinSpace]", "-", 
  RowBox[{"1.1948037575722236`*^-13", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.715580217385384*^9, 3.715580239153117*^9}, 
   3.715580271043985*^9, 3.715580439608739*^9, 3.715580503997547*^9, 
   3.715593455234335*^9, 3.715593641799302*^9, 3.7155937488319607`*^9, 
   3.715605362523017*^9, 3.71560542524797*^9, 3.7156055286991377`*^9, 
   3.731874289555746*^9, 3.7318748688246307`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"x_", ",", "r1_", ",", "r2_"}], "]"}], ":=", " ", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Coefs", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", "*", "k11", "*", "x"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Coefs", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "*", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], "*", "k11", "*", "x"}], "]"}]}]}], 
       ",", 
       RowBox[{"0", "<=", "x", "<", "1.0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Coefs", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", "*", "k11", "*", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", "-", "r1"}], "]"}], "*", "x"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Coefs", "[", 
          RowBox[{"[", "4", "]"}], "]"}], "*", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], "*", "k11", "*", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", "-", "r1"}], "]"}], "*", "x"}], "]"}]}]}], ",", 
       RowBox[{"1.0", "<=", "x", "<", "2.0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Coefs", "[", 
          RowBox[{"[", "5", "]"}], "]"}], "*", 
         RowBox[{"Exp", "[", 
          RowBox[{"\[ImaginaryI]", "*", "k11", "*", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", "-", "r2"}], "]"}], "*", "x"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Coefs", "[", 
          RowBox[{"[", "6", "]"}], "]"}], "*", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], "*", "k11", "*", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", "-", "r2"}], "]"}], "*", "x"}], "]"}]}]}], ",", 
       RowBox[{"2.0", "<=", "x", "<", "3"}]}], "}"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.714988111844295*^9, 3.7149881703742437`*^9}, {
  3.714988619970869*^9, 3.714988663570272*^9}, {3.7149887705735292`*^9, 
  3.714988801609227*^9}, {3.7149888327314663`*^9, 3.714988921025069*^9}, {
  3.7149890791522837`*^9, 3.714989128715604*^9}, {3.71499852747894*^9, 
  3.714998582655746*^9}, {3.714998624782236*^9, 3.7149986289566927`*^9}, {
  3.714998664856427*^9, 3.714998678636695*^9}, {3.7149987411461077`*^9, 
  3.714998770916286*^9}, {3.7149988044928503`*^9, 3.714998867833129*^9}, {
  3.714999800077572*^9, 3.714999812300537*^9}, {3.715579474639385*^9, 
  3.7155795141471663`*^9}, {3.715580577160665*^9, 3.715580621644187*^9}, {
  3.715593676226234*^9, 3.715593697262527*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"\[Psi]", "[", 
     RowBox[{"x", ",", "1.8", ",", "0.0"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.714989132871827*^9, 3.7149892164321632`*^9}, {
  3.7149990501990013`*^9, 3.714999059120574*^9}, {3.714999183424057*^9, 
  3.7149991846973352`*^9}, {3.714999472811903*^9, 3.7149994730859337`*^9}, {
  3.714999912551701*^9, 3.71499991357021*^9}, {3.71557843364509*^9, 
  3.715578449589446*^9}, {3.715580626661386*^9, 3.715580643354817*^9}, {
  3.7155934707053556`*^9, 3.715593482819865*^9}, {3.715593756742494*^9, 
  3.7155937608533907`*^9}, {3.715605366644328*^9, 3.7156053713389463`*^9}, {
  3.715605413530526*^9, 3.715605415779448*^9}, {3.715605446535693*^9, 
  3.715605455518969*^9}, {3.731874886347188*^9, 3.7318748869210463`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]], 
     LineBox[CompressedData["
1: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
      "]], 
     LineBox[CompressedData["
1:eJwVlnk4lV0Xxp+DY8wcGc85zxYivIoyxNlbSUJRUpJQVCoJpVBKiaJJRCI6
VIYGeRtQydaLRlMaNKeSpMFUZMq3vr+6ftdaa6973Ws9J+zqzYvXiDEMI+Qw
zP//DW45ObpJkiEiKcWeF2E6dMo241bbyQyJ2xn3I2wOj36jK62JAUMEP65+
8F3FoyUyx07OncKQgE42TXE3j1rmDK7wMGEIk2Wx8P4NHnWorW1bYwm8K1+w
x4RPfVT8u1IcGVJ6/OLtMHEB1fVNdc1wYog5KzNyVElA287VXcx2ZkjYOtne
FF0BXWtjsrnADfiS8TkrKwHdEjDUf2sJQ9q6qw6rrRfQQyVpYx1BDOlpC9Ad
vyug7n/u+n1fC3p4AR1mLQKqMnuY9gYzhPhNHBG+FdDMZwF7R0NAj1nYtfE+
AT03aiqlEsmQlJgOU44uS6tc7ivZJ8C8Zwdt+jewdM/xkfDZ++H9eLudvK0s
dXxn9mReEkOKvv19MSWWpY/C09MXH2ZItYRK7qsjLH2RuVorOB3mcyk8UFrK
0t6OUb20c6B3XbVQ4ydL1WOnvo0sZEhnhovL9V8stVP1yfAuZoh3Wu17yxGW
HsDl0rxLDHlhr7LrtRSivMzwH0XXQM/Lbevr+Ig6mokKDpZBvkTK2Uh9RDfU
NvqHVjDEuSlbU3oqotd7prZYVDKkYrHx4SczEHWb31FWVQPvpUwvEHdBNOL9
xLC8OoYcyM+6VbsQ0RORc4z23WNIppXZvXWeiH7ME2XPfwT6i7PyPX0RlbZu
WmLSwJDmec2BpwIQNWsck1dsgvsQ/zZ2NwjR6GGfuKctDJG2Kc67E4JobkqS
TflTuI9ZM3KPhSFaa1DRd/I5+L1n+/I5WxFV8lRb4/+KIdaXlH+57kC04ELT
/K4PsK84gU7vfkTrHf6KNXyCfK/9mxuTEe1rNam8/Bn6PTix9PBhRO0lks0i
v0J85ceGy6mIrs6q+LLsG8RrL3uppiN6wPyLyPYHcMiCAO8TiD71dVRlemF/
hk7didmIDvdF1H/sAz+v14aE5SDKT8pLqPsF9xHv4z/rNPjLbxYWDcA9HlKv
/SICf6//HUz+A/1+2GRG5iOa4mr676ZhqO+0etl+BtGyDys2eIzCfr9d3zfj
HKJvtifrWfwFTj2Yua4AUY7CjTdqDIeQC/+p7ChE1ODsl/Q/HA7pmXmid3MR
7MdW3f21OIekhG23cCqG/TQ7SldxOaStXrx1DDhz7ZY7IikOKR1TeJ1xHtGq
0byYeBkOCejPESpfQPRTarPFWjmof/eF2QQsbTT+3Vke4tOWsueBzahpwVRF
iIv2nb4PvMTL119BmUM8Jjvs+D/HfEvW6FUBPYMHrxUDi/bcePxkIuRnnXAN
Aa6b1Jlcps4hYY33iRJw1yV1x5MaHGKeWXY8HfQoOc4d26HFIQKhsfMo6J35
akuZnw6HMPP4vo7AvmH5mx148P72msebYF4ZpxWVbgLo/1ft/Grwo0x7oow3
4pDm0exkC/ArsLfeK3AyzP89J7LtLLx/LyE/1AD8yy3etB78vn1K2B09hUPi
pqVGNubBfiIGZyUYg16VsBRF2FeN7vpn2WbQr+beBINTiIb1s6jQHPIv1UeO
nERU58Gr0CvTQb/MW+YS3Me2rW7SD2YC2/9z9Czck54L1+upNfi3Wf9U11FE
m/lVee9tQd+1o+8mwP0ZP/pn1oAQ9KQJtDoSEW0Vde7nOABn6/Fz4hHdty3v
6YQ5sK9Yz3DzOETfsqqhevNgXtPOSd+jEE0efHTTbD7ElTxiJkaCXw37pGxd
Yd73XXM1w+G+ogZEHu7gZ9EVq4pguPeFl3+sWAR6SqRCF8P31qUXbLvOE+bN
fm/6wB/utenlk9hlMF+b9ya3pYgO6t+WvOAPXKbXe94B0bMjkZ5lq+D9wMDt
xnaIejw2E90JhPrjaU8TZyJ6fqfI5sU6iKfux8+NEfV7Eh/CDeOQoqutGo+V
EZUrtruhFAF+/n6Zbi2HaMWu31ydrRwy5YSJc6wEosrG605Pj4J8t9643AGW
1sa5tPjHgd74d1UOL1kavlScv3Ev9PPfEnD8MUt5JpUbt+2DeuvYgtoHLI1q
NeUePgD9F4f7Vt1g6VQzZeubKRxyP/C5vkYmS1Nft+ZMzIP+m+9f37KQpflj
B2eP5XNIsMDJy30uS//lky+fz3KIc/T2b/J2LG0OLDIvL4L5NYNsLY1YKv89
qmZ5KdzjqCIyFIPf11HNr7kU7rl847VrJfD/Aa/x8P47HFL9zn7rvTMCWkj2
Tg+rAXZYaluVKaB393XtcLgH88ys1vPeK6Di8rcU2hthP/57d+ElArpL19fS
6B2HiJhY6def+fQIVnqp3Ab9P67ak1bPpzmramOHP0B8+2i8+lU+rTxncu/R
Z3ivfGLLzt18OmQ6tjz0B9yPafGyJjU+3SrM3X11FOJN+suvWvPoBv+2h/ba
YoTZTaNrvHVoJ2/Dax1dMRJwvqajzkaHrn3X/22EJ0YEVdrlWVo6dPVKKfmb
SIzElSa5Vr7WpitWmLnPNIZ8rcLW9hXa1G3ZzidmNv+PH5cb8tSiZu4ab/jL
xEh16LHSoskatFfo8YOTBmzbdaZliSodsA86JpMO+by0xCtTVOmoXdQM5ROg
x/DDyKZRFSo5SxQryIa4lG931BkVqmPVI4/PQL2EDe7sVqZO/6SY7bwK8YTw
xO17lWgWv3nzwBOo39irvIOVo3MYj76uieKEyT2SOZwxVmX1Cg0YHQG2O+Lv
Z9MnNFhTmWCVAjyY1jFBul84scdLbW4qsJv8hozn/cI+bpJlQAZw7Ce+5Zbf
wpJp3REZucC0e0Po+T9Cg6Rb3WKXgUdn345THBeqWy/5+roJ+PBulfynXPw7
PeHNYWUJQqI2jmX0KuHFVb9aj6lKkLhF3HfqfGVc2hH4JF1NgjBqfee2uSnj
EKvZD3M0If6z5sTTAmX88cXf8kss8O9rtYyPCm7WjkprmAb5FYb8xzdU8cW8
DS7yiyVIdSvepr5SHcs+fDlXeQnE/1gG9ieo4+A+Zwe1pRBXR5MKStSx3hxD
a10feE9H6szBcXWc1f5J33Q15L/eJel+ehI+YLiSsyACWDXgc+RzDRx4yb3i
UCpwu1ajG6uNJ6ObcqHHgeudlo86aOP2jMn+7hnwvsauTbtXa+OguCGuSpYE
EWlYrBzP18ZrPM94nsiDfm3luW2sDl43NPAzrxTyUUfdiLounhK6anb8FeAX
pPCRpS7u/PgoPega1L/+/WnjYl0cXC+yM6yAev1NJTqHdfH60y7JF6kECRgr
XGTL8PDGubn65Y2Q72tlYP+Wh01uSkdnNkM8+dp/o4M8/N1sS310C+gNPPAq
SYWPQzSct9g9lyAC53lNcvP4eNO33uo7b6H+c8Pk85f4ePOxub7134GnTZ+S
YS3A5pKlly/9hP25tHC9HQW4J0ZL/GgP6M138Rl3F+CwoO7iRb8kiLniZ+2/
awU43Ork4PMRCdJmb/rnRpoAb3n7PfWDLJd4uO701u4U4JvHPkR/m8AlKd9s
lCT6BVjM6XnAbwWIH5zmVD8mwCkl1ExGlUvadJe+GlZhccnu1Ifm2lxCVr/Z
3DiLxQMW+/+11eWSnmBee+lcFtt37sh05HNJ6QFZ6wh3Ftd7rFnrrccl0gtd
LI+tZnEXay0WN5VLmJ/2e4X7WTz9ucnXJFMuCejo+q2WwuLoZLY57R8uUUpO
u/kok8XS/bK5hRZcUl3m9OtxMYv1a9/aNM2C9zeErJn3kMUBa+PDeW5cErw6
ZuC+BMJFWlHeUxZyifmvGxa75BDubgzB0z24JCrH6ZmSCsK7rJbKOy3hkjis
q9rIQzhb2qh4ky/032BkVDgT4Y+Vuinb/bikYsnGmU52CBuHq2zfEwBcuNHl
PweEK16OOKYHQX/zVt9Fbgg/P9/YVhkC/i3zVXvojzDPv+be3VAuyRyvIh5B
CK9RrShpDgN/jqkZXA1G+NeOvJ3tW7mk+eGsMYVwhO3MMwJ/bgM9W8XfS0Ui
HN+e7PInCvqZXvZ5G4WwyoKtGhNiwX/bw2K8OIR9OOvH1XZziXfpc0FSPMJ5
11d28Pdwyf3U6bebExE25827ZpEA+8uzW/b7EMLbW2Zl2+/nElE5mt9yFOGq
RPO985LAf8ODeQdTEV7Qremx4jCXhJ1xCE87gfBAt8zR2UfBbwmZulsnERb1
DDUYHYN6/06mLhthl96vE5TTwN/AKPZyDszT+9L1z3G4h6oEvZjTCOf2PUh+
nwH99ZUlDPIQdu6/8eBuJsSXuldfyUe4r79YuiQL+vGKvQRnET716+S89FOw
b79bd0LPIez0OylxZy74MWGZWG4Bwj2/o+sCReDfrD1qJYUIZw2sl3DNB/91
tgzlFiHsOLh8zvSzUM9kXQwrRvjn4Py9mgXQb8UJU73zCGf+sbnDFAE/IDvK
gGcPGTGdxZAvLzpufAHh70OauOkC7F+1P2o3cMawzK6ySzBf/wXD68BkZKgy
5zL41RMmegTcNfJ1ZN+/wNE6n/4DPj760jbkKsxrfLs7C1g49iDa8zrMV59+
1xO4c+xGhW057M9TN/gH9E/9WzzI3oB429+n64Dtxk/OlLkF893SVKgB/R3j
SZE9ldB/+Z6J4zBfChNzrbUK9rEo9qs2sC1nQ39VNcwfmHREE/xo5/hML/gP
eLMX9w/4d0TMJfxwLdxXZJ17OfhrLW5buvUuvJfau3nZGYQPSWiZzXkIegc/
2tqKEJ7Jld1kXA/vt7/p2pmLcBt3+IJyI7xnNBojOoWwpdQro7bHUB/p4Zyc
ifA7qYfB956A3uU+hzwyED4gfbOw5Bm852RRNZiG8BuZLP3Yl8ARViOdRxBO
lE0OCnoNrNKqYAH3aC4Xc8b1LfgdYsb6JSG8b4IPq/UB4qsNvZbBPU9V1NIt
74Tv6VbywefwPTxVlPXN7YJ+u+omG0XA96s0nJXwHerHhZ2+oQi3KL/SWNID
8TOJUsFrEY6ZmDWxdxD0zni2Rt4L4clqyZ4vhmD/ETIKGzwQblSLSaUjMO/7
zxpFrgijST5KR8ZhP35Z2+7D9/1QU2vCVClJIgq2sM82QfhT+fsyaRlJEqbY
v1hgiPCo17lVHbKShCxvFB5gETZNNS/PU5AkmQlDlYw67Et23moNdUkSt26e
T/oYi4uKJsgPTJIk5u3VBtMHWXzHqaX8iaYk6Xm0VP1KD4v79q6UP6orSV68
fHRgxScWe41sqeDqSxIl3tkur3ssDj1pE/jJQJKkyCX8nVDN4kSrcfk7UyRJ
1HatI4UVLK7Ykhy400SSOM/S8NgPv49a30UK/RYQv7i4vC+JxW1vGoLaZkO/
NL91++D3eSgmTbHKEfp9+DE12o7FKprLb2Y7gb7643ixBYvneLUrLnOBeeUN
jv4rYHFBw/DNhkXgh2N3pMGwAG+sMlS+FQD6PggNBwsFeOD0ntvpu2De3Ktu
S9/zcUbs45HsOEnCxLn6bKvl45krWNv8vZKkrT9riU8xH/4ouFNWkihJql99
fBMawce/DzGl945A/m+v/iYOH/+K3p0/lAvxlB7/PDUe7vOM3b+SQn3LglYl
VR2cOq2hLvAO6ImiRlq92ni6oq7Ehhrof2zo7M9GbRzxsDJu2z1gq7Maw0na
uJeMRh9tgvr5Cbz8MS3cY7oj5M57qDc9Oy38tSb+IRW9SJ+RItVFE2b0R0zC
PdNqv0iLSZE49Wqd9AWTcN8KxV3fxaUI4+99TmnKJDxw+dz5q1KQ75Kakv5G
HTPeLeKzFSH/ppvo7Rx1PLFoapkfD/ii30COnBq2dX6nlWkH+dlNsgV7VHDi
gTntstEQ5ytNCjWVxTXZxyoMdgAXlMayD2Qwc/n9odmxwDq+I6eDZHD0sx0z
YvZA/0dGkZxsaRyCriV+TQLWZOQ2caXwosrJRvezgNN3uOQ8Fsc6PdzQhErg
7kfpi7KGhd7iS2bnVQFL2udfuDckTFfPV79dDWxacb/51x+hgr2Q/qoFvvbM
IH7hoJCTvE0pqAG4ziCtfLxf2KH35crsd8AfE1eVX+8S6lnN2O/XBhwR3L9G
7qswwCV+RcxH4Kxz7IeAL8KXYXyJKx3AZQsYV7l2Yf3tZV5sN7AlMjlZ+Uoo
/fickX0vsHNPye41rcK57f1j3v3Apxr+manwVFglm1KQMgjMtP+zsuqhcET3
XczFIWBr65BRhVqh9TQT9/sjwKKx8faqm8KtjjF67WPA1ZmHLOl54b/L7g+O
j/+/nnF+Jv/Q/n95q3Yp
      "]]}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 3}, {-0.0001424486542955833, 0.0001424490039613202}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7149891897535257`*^9, 3.7149892170804977`*^9}, 
   3.714998681898842*^9, 3.714998773791328*^9, 3.714998870815235*^9, {
   3.714999051075902*^9, 3.714999059594329*^9}, 3.714999185657218*^9, 
   3.7149994738170767`*^9, 3.7149998181951714`*^9, 3.7149999143995113`*^9, 
   3.7151042644734592`*^9, 3.715577721251157*^9, 3.715578450437462*^9, 
   3.715579518175675*^9, 3.715579603727498*^9, {3.7155802237944098`*^9, 
   3.715580243954877*^9}, 3.715580275370535*^9, 3.7155804446622763`*^9, 
   3.7155805135513887`*^9, {3.715580644107769*^9, 3.715580658358821*^9}, {
   3.7155934600218782`*^9, 3.715593484504779*^9}, 3.7155936475171013`*^9, 
   3.715593702416519*^9, {3.715593752729713*^9, 3.7155937612772818`*^9}, 
   3.7156053723477182`*^9, {3.715605430659792*^9, 3.715605456023098*^9}, 
   3.7156055318365183`*^9, 3.731874291310521*^9, {3.731874879380581*^9, 
   3.731874887853485*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fed39", "[", 
   RowBox[{"k1_", ",", "L_", ",", "L2_", ",", "d_", ",", "r1_", ",", "r2_"}], 
   "]"}], ":=", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "d", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], ")"}]}], "+", 
       RowBox[{"L2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          SqrtBox[
           RowBox[{"1", "-", "r2"}]]}], ")"}]}], "-", 
       RowBox[{"L", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}]}], ")"}]}]}], ")"}]}]], " ", 
   SuperscriptBox["k1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"L", "-", "L2"}], ")"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{"L", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"r1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"L", "-", "L2"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]], "+", 
             SqrtBox[
              RowBox[{"1", "-", "r2"}]]}], ")"}]}]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "r1"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"L", "-", "L2"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]], "+", 
             SqrtBox[
              RowBox[{"1", "-", "r2"}]]}], ")"}]}]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"r1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}], ")"}]}]}], ")"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
           " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{"L", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"r1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}], ")"}]}]}], ")"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SqrtBox[
           RowBox[{"1", "-", "r1"}]], "+", 
          SqrtBox[
           RowBox[{"1", "-", "r2"}]]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"r1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
           " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{"L", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"r1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
           " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"L", "-", "L2"}], ")"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"r1", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}], ")"}]}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"L", "-", "L2"}], ")"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{"L", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "r1"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox[
            RowBox[{"1", "-", "r2"}]]}], ")"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.731874020365088*^9, 3.731874022253344*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fed39", "[", 
  RowBox[{"k1", ",", "3", ",", "1", ",", "d", ",", "r1", ",", "0"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.731874036726623*^9, 3.731874070529039*^9}, {
  3.7318741482967863`*^9, 3.731874175075181*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      RowBox[{"2", " ", "d", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], ")"}]}], "-", 
      RowBox[{"3", " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
  SuperscriptBox["k1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"5", "-", 
         RowBox[{"2", " ", "d"}], "+", 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], ")"}]}], "-", "r1"}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "d"}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}]], " ", "r1"}], 
    "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}]], " ", "r1"}], 
    "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", "r1"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "-", 
            RowBox[{"2", " ", "d"}]}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", "r1"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], ")"}]}], "+", "r1"}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"5", "-", 
         RowBox[{"2", " ", "d"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "-", 
            RowBox[{"2", " ", "d"}]}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], ")"}]}], "+", "r1"}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "-", 
            RowBox[{"2", " ", "d"}]}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], ")"}]}], "+", "r1"}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.7318740714879913`*^9, {3.7318741591640167`*^9, 3.7318741776419697`*^9}, 
   3.731874291815918*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%6", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "7"}], "+", 
      RowBox[{"2", " ", "d", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], ")"}]}], "-", 
      RowBox[{"4", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
  SuperscriptBox["k1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"5", "-", 
         RowBox[{"2", " ", "d"}], "+", 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", "r1"}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", "d", "+", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], ")"}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", "r1"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", "r1"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "4"}], " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "d", "-", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]], "+", 
         RowBox[{"d", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], ")"}]}], "+", "r1"}], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"5", "-", 
         RowBox[{"2", " ", "d"}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.7318742087261667`*^9, 3.731874292348485*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpToTrig", "[", "%7", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["k1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "r1"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}]}], "+", 
    RowBox[{"r1", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"6", " ", "k1"}], "+", 
       RowBox[{"4", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
    RowBox[{"r1", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"8", " ", "k1"}], "-", 
       RowBox[{"4", " ", "d", " ", "k1"}], "+", 
       RowBox[{"4", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "-", 
    RowBox[{"r1", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"8", " ", "k1"}], "-", 
       RowBox[{"4", " ", "d", " ", "k1"}], "+", 
       RowBox[{"4", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", 
       RowBox[{"4", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "-", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{"5", "-", 
           RowBox[{"2", " ", "d"}], "-", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{"5", "-", 
            RowBox[{"2", " ", "d"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"4", " ", "k1"}], "+", 
         RowBox[{"4", " ", "k1", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"4", " ", "k1"}], "+", 
          RowBox[{"4", " ", "k1", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"6", " ", "k1"}], "+", 
       RowBox[{"4", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"8", " ", "k1"}], "-", 
       RowBox[{"4", " ", "d", " ", "k1"}], "+", 
       RowBox[{"4", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"10", " ", "k1"}], "-", 
         RowBox[{"4", " ", "d", " ", "k1"}], "+", 
         RowBox[{"4", " ", "k1", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"10", " ", "k1"}], "-", 
          RowBox[{"4", " ", "d", " ", "k1"}], "+", 
          RowBox[{"4", " ", "k1", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"8", " ", "k1"}], "-", 
       RowBox[{"4", " ", "d", " ", "k1"}], "+", 
       RowBox[{"4", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", 
       RowBox[{"4", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"7", " ", "k1"}], "-", 
      RowBox[{"2", " ", "d", " ", "k1"}], "+", 
      RowBox[{"4", " ", "k1", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}], "-", 
      RowBox[{"2", " ", "d", " ", "k1", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}]}], "]"}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"7", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1"}], "+", 
       RowBox[{"4", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.731874211675377*^9, 3.731874292946514*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%2", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "d", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], ")"}]}], "+", 
      RowBox[{"2", " ", "L2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], ")"}]}], "-", 
      RowBox[{"L", " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"2", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]}], ")"}]}]], " ", 
  SuperscriptBox["k1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "d"}], "+", 
         RowBox[{"2", " ", "L"}], "-", "L2", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "-", "L2"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", "r1"}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "d"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "-", "L2"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}]], " ", "r1"}], 
    "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "-", "L2"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}]], " ", "r1"}], 
    "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"L", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "-", "L2"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", "r1"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"L", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
          " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"L", "-", "L2", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
          " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], ")"}]}], "+", "r1"}], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"L", "-", "L2"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "d"}], "+", 
         RowBox[{"2", " ", "L"}], "-", "L2", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
          " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.731874077306518*^9, 3.731874293515518*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpToTrig", "[", "%3", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["k1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"2", " ", "d", " ", "k1"}], "-", 
      RowBox[{"3", " ", "k1", " ", "L"}], "+", 
      RowBox[{"2", " ", "k1", " ", "L2"}], "+", 
      RowBox[{"2", " ", "d", " ", "k1", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}], "-", 
      RowBox[{"2", " ", "k1", " ", "L", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}], "+", 
      RowBox[{"2", " ", "k1", " ", "L2", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}]}], "]"}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"2", " ", "d", " ", "k1"}], "-", 
       RowBox[{"3", " ", "k1", " ", "L"}], "+", 
       RowBox[{"2", " ", "k1", " ", "L2"}], "+", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", 
       RowBox[{"2", " ", "k1", " ", "L", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"2", " ", "k1", " ", "L2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"r1", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "d"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "-", "L2"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}], "+", 
    RowBox[{"r1", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"L", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "-", "L2"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}]}], "-", 
    RowBox[{"r1", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"L", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
          " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}]}], "-", 
    RowBox[{"r1", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"4", " ", "d", " ", "k1"}], "-", 
       RowBox[{"4", " ", "k1", " ", "L"}], "+", 
       RowBox[{"4", " ", "k1", " ", "L2"}], "+", 
       RowBox[{"4", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", 
       RowBox[{"2", " ", "k1", " ", "L", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"2", " ", "k1", " ", "L2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "d"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "-", "L2"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], ")"}]}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{"L", "-", "L2"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"L", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"L", "-", "L2"}], ")"}], " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"L", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
          " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "-", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
            " ", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{"L", "-", "L2", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
             " ", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "d"}], "+", 
           RowBox[{"2", " ", "L"}], "-", "L2", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
            " ", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "d"}], "+", 
            RowBox[{"2", " ", "L"}], "-", "L2", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], 
             " ", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"4", " ", "d", " ", "k1"}], "-", 
         RowBox[{"4", " ", "k1", " ", "L"}], "+", 
         RowBox[{"2", " ", "k1", " ", "L2"}], "-", 
         RowBox[{"2", " ", "k1", " ", "L", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], "+", 
         RowBox[{"2", " ", "k1", " ", "L2", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], "]"}], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"4", " ", "d", " ", "k1"}], "-", 
          RowBox[{"4", " ", "k1", " ", "L"}], "+", 
          RowBox[{"2", " ", "k1", " ", "L2"}], "-", 
          RowBox[{"2", " ", "k1", " ", "L", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "+", 
          RowBox[{"2", " ", "k1", " ", "L2", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"4", " ", "d", " ", "k1"}], "-", 
       RowBox[{"4", " ", "k1", " ", "L"}], "+", 
       RowBox[{"4", " ", "k1", " ", "L2"}], "+", 
       RowBox[{"4", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", 
       RowBox[{"2", " ", "k1", " ", "L", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"2", " ", "k1", " ", "L2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.731874101498227*^9, 3.73187429432626*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"k1", ",", "3", ",", "1", ",", "0.5", ",", "0.8"}]], "Input",
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"fed89", "[", 
   RowBox[{"k1_", ",", "d_", ",", "r1"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox["k1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "r1"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"3", "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}]}], "+", 
     RowBox[{"r1", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"6", " ", "k1"}], "+", 
        RowBox[{"4", " ", "k1", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
     RowBox[{"r1", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"8", " ", "k1"}], "-", 
        RowBox[{"4", " ", "d", " ", "k1"}], "+", 
        RowBox[{"4", " ", "k1", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "-", 
     RowBox[{"r1", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"8", " ", "k1"}], "-", 
        RowBox[{"4", " ", "d", " ", "k1"}], "+", 
        RowBox[{"4", " ", "k1", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], "-", 
        RowBox[{"4", " ", "d", " ", "k1", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "-", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "k1", " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
              SqrtBox[
               RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}]}]}], ")"}]}], 
     "-", 
     RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"3", "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{"5", "-", 
            RowBox[{"2", " ", "d"}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "k1", " ", 
           RowBox[{"(", 
            RowBox[{"5", "-", 
             RowBox[{"2", " ", "d"}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "d"}], ")"}], " ", 
              SqrtBox[
               RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}]}]}], ")"}]}], 
     "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"4", " ", "k1"}], "+", 
          RowBox[{"4", " ", "k1", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]}], "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"4", " ", "k1"}], "+", 
           RowBox[{"4", " ", "k1", " ", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"6", " ", "k1"}], "+", 
        RowBox[{"4", " ", "k1", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"8", " ", "k1"}], "-", 
        RowBox[{"4", " ", "d", " ", "k1"}], "+", 
        RowBox[{"4", " ", "k1", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], "-", "r1"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{
          RowBox[{"10", " ", "k1"}], "-", 
          RowBox[{"4", " ", "d", " ", "k1"}], "+", 
          RowBox[{"4", " ", "k1", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]}], "]"}], "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"10", " ", "k1"}], "-", 
           RowBox[{"4", " ", "d", " ", "k1"}], "+", 
           RowBox[{"4", " ", "k1", " ", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"8", " ", "k1"}], "-", 
        RowBox[{"4", " ", "d", " ", "k1"}], "+", 
        RowBox[{"4", " ", "k1", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], "-", 
        RowBox[{"4", " ", "d", " ", "k1", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"7", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1"}], "+", 
       RowBox[{"4", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}], "-", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"7", " ", "k1"}], "-", 
        RowBox[{"2", " ", "d", " ", "k1"}], "+", 
        RowBox[{"4", " ", "k1", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], "-", 
        RowBox[{"2", " ", "d", " ", "k1", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.7318743155809526`*^9, 3.7318743656332083`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mati221", "[", 
  RowBox[{"k1", ",", "L", ",", "L2", ",", "d", ",", "r1", ",", "0"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.731883627553653*^9, 3.731883630846094*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", "L"}]], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]], 
     ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]], 
     ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]]}], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"L", "-", "L2"}], ")"}], " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}]], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"L", "-", "L2"}], ")"}], " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}]], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}]]}], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]], 
      " ", "k1"}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}]]}],
       " ", "k1"}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}]]}], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}], " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}]]}], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{"L", "-", "L2"}], ")"}]}]]}], " ", "k1"}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}]], " ", "k1"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.731883632110689*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "%141", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
     RowBox[{"(", 
      RowBox[{"L", "-", "L2"}], ")"}]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
     RowBox[{"(", 
      RowBox[{"L", "-", "L2"}], ")"}], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]]}]}]], " ", 
  SuperscriptBox["k1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7318836369035997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Cancel", "[", "%142", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", "L"}], "-", 
     RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
      RowBox[{"(", 
       RowBox[{"L", "-", "L2"}], ")"}]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], "-", 
     
     RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
      RowBox[{"(", 
       RowBox[{"L", "-", "L2"}], ")"}], " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}]}]]}], " ", 
  SuperscriptBox["k1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}], " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L"}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"L", "-", "L2"}], ")"}]}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}]}], 
       "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "d"}], "+", "L", "-", "L2"}], ")"}], " ", 
        
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.73188363950066*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%143", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "k1", " ", 
     RowBox[{"(", 
      RowBox[{"L", "-", 
       RowBox[{"2", " ", "L2"}], "+", 
       RowBox[{"2", " ", "d", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}]]}], " ", 
  SuperscriptBox["k1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"L", "-", "L2", "+", 
         RowBox[{"2", " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", "r1"}], ")"}]}], "-", "r1", "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "d"}], "-", "L", "+", 
         RowBox[{"2", " ", "L2"}]}], ")"}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"L", "-", 
         RowBox[{"2", " ", "L2"}], "+", 
         RowBox[{"2", " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}]], " ", "r1"}], 
    "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "4"}], " ", "\[ImaginaryI]", " ", "d", " ", "k1", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", "L2"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], ")"}]}], "+", "r1"}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "d"}], "-", "L", "+", "L2"}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"L2", "-", 
         RowBox[{"2", " ", "d", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.731883645293038*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpToTrig", "[", "%144", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["k1", "2"]}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"2", " ", "d", " ", "k1"}], "-", 
      RowBox[{"k1", " ", "L"}], "+", 
      RowBox[{"2", " ", "k1", " ", "L2"}], "-", 
      RowBox[{"2", " ", "d", " ", "k1", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}]}], "]"}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"2", " ", "d", " ", "k1"}], "-", 
       RowBox[{"k1", " ", "L"}], "+", 
       RowBox[{"2", " ", "k1", " ", "L2"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "r1"}], "-", 
    RowBox[{"r1", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"4", " ", "d", " ", "k1"}], "-", 
       RowBox[{"2", " ", "k1", " ", "L"}], "+", 
       RowBox[{"4", " ", "k1", " ", "L2"}]}], "]"}]}], "+", 
    RowBox[{"r1", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"4", " ", "d", " ", "k1"}], "-", 
       RowBox[{"2", " ", "k1", " ", "L"}], "+", 
       RowBox[{"4", " ", "k1", " ", "L2"}], "-", 
       RowBox[{"4", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
    RowBox[{"r1", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"4", " ", "d", " ", "k1", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "-", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "k1", " ", "L2"}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "k1", " ", "L2"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "d"}], "-", "L", "+", "L2"}], ")"}]}], "]"}], 
       "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "d"}], "-", "L", "+", "L2"}], ")"}]}], 
         "]"}]}]}], ")"}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"4", " ", "d", " ", "k1"}], "-", 
       RowBox[{"2", " ", "k1", " ", "L"}], "+", 
       RowBox[{"4", " ", "k1", " ", "L2"}]}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"2", " ", "k1", " ", "L2"}], "-", 
         RowBox[{"4", " ", "d", " ", "k1", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"2", " ", "k1", " ", "L2"}], "-", 
          RowBox[{"4", " ", "d", " ", "k1", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"4", " ", "d", " ", "k1"}], "-", 
         RowBox[{"2", " ", "k1", " ", "L"}], "+", 
         RowBox[{"2", " ", "k1", " ", "L2"}], "-", 
         RowBox[{"4", " ", "d", " ", "k1", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"4", " ", "d", " ", "k1"}], "-", 
          RowBox[{"2", " ", "k1", " ", "L"}], "+", 
          RowBox[{"2", " ", "k1", " ", "L2"}], "-", 
          RowBox[{"4", " ", "d", " ", "k1", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"4", " ", "d", " ", "k1"}], "-", 
       RowBox[{"2", " ", "k1", " ", "L"}], "+", 
       RowBox[{"4", " ", "k1", " ", "L2"}], "-", 
       RowBox[{"4", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", " ", "d", " ", "k1", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7318836494032393`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%145", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["k1", "2"]}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"k1", " ", 
      RowBox[{"(", 
       RowBox[{"L", "-", 
        RowBox[{"2", " ", "L2"}], "+", 
        RowBox[{"2", " ", "d", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}], "+", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"k1", " ", 
       RowBox[{"(", 
        RowBox[{"L", "-", 
         RowBox[{"2", " ", "L2"}], "+", 
         RowBox[{"2", " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}]}], 
   ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "r1"}], "-", 
    RowBox[{"r1", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "d"}], "-", "L", "+", 
         RowBox[{"2", " ", "L2"}]}], ")"}]}], "]"}]}], "+", 
    RowBox[{"r1", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"L", "-", 
         RowBox[{"2", " ", "L2"}], "+", 
         RowBox[{"2", " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}], "+", 
    RowBox[{"r1", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"4", " ", "d", " ", "k1", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], ")"}]}], "+", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "k1", " ", "L2"}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "k1", " ", "L2"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "d"}], "-", "L", "+", "L2"}], ")"}]}], "]"}], 
       "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "d"}], "-", "L", "+", "L2"}], ")"}]}], 
         "]"}]}]}], ")"}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "d"}], "-", "L", "+", 
         RowBox[{"2", " ", "L2"}]}], ")"}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "L"}], "+", "L2", "-", 
           RowBox[{"2", " ", "d", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SqrtBox[
               RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "L"}], "+", "L2", "-", 
            RowBox[{"2", " ", "d", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SqrtBox[
                RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}]}], 
      ")"}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"L", "-", 
         RowBox[{"2", " ", "L2"}], "+", 
         RowBox[{"2", " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "k1", " ", 
         RowBox[{"(", 
          RowBox[{"L2", "-", 
           RowBox[{"2", " ", "d", " ", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "k1", " ", 
          RowBox[{"(", 
           RowBox[{"L2", "-", 
            RowBox[{"2", " ", "d", " ", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}]}], ")"}]}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", " ", "d", " ", "k1", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7318836650215883`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"mati222", "[", 
   RowBox[{"k1_", ",", "d_", ",", "r1_"}], "]"}], ":=", 
  RowBox[{"mati221", "[", 
   RowBox[{"k1", ",", "3", ",", "1", ",", "d", ",", "r1", ",", "0"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.731874414502507*^9, 3.7318744617395144`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mati222", "[", 
  RowBox[{"k1", ",", "d", ",", "r1"}], "]"}]], "Input",
 CellChangeTimes->{{3.731874453027821*^9, 3.73187450507294*^9}, {
  3.73187454719938*^9, 3.7318745477108707`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"3", " ", "\[ImaginaryI]", " ", "k1"}]], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "3"}], " ", "\[ImaginaryI]", " ", "k1"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", 
         RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1"}]], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", 
         RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1"}]], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]]}], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}]], ",", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "k1", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}]], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1"}]]}], ",", 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "k1"}]]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1"}]], " ", "k1"}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1"}]]}], " ", "k1"}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", 
           RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}]]}], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "k1", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}]]}], " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}], ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1"}]]}], " ", "k1"}], ",", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "k1"}]], " ", "k1"}]}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.731874525645709*^9, 3.731874548521358*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "%41", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "7"}], " ", "\[ImaginaryI]", " ", "k1"}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{"2", "-", 
       RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1"}], "-", 
    RowBox[{"4", " ", "\[ImaginaryI]", " ", "k1", " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]]}], "-", 
    RowBox[{"2", " ", "\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{"2", "-", 
       RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1", " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]]}]}]], " ", 
  SuperscriptBox["k1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1"}], "+", 
       RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "k1"}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1"}], "+", 
       RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1"}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "k1"}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1"}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1"}], "+", 
       RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "k1"}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1"}], "+", 
       RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1"}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "k1"}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1"}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1"}], "+", 
       RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "k1"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1"}], "+", 
       RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1"}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1"}], "+", 
       RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "k1"}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1"}], "+", 
       RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1"}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "k1"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1"}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1"}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1"}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"8", " ", "\[ImaginaryI]", " ", "k1"}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1"}], "+", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", 
       RowBox[{"3", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"2", "-", 
          RowBox[{"2", " ", "d"}]}], ")"}], " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}]], " ", "r1"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.7318746938781433`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%46", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
    RowBox[{"(", 
     RowBox[{"3", "+", 
      RowBox[{"2", " ", "d", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}]], " ", 
  SuperscriptBox["k1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"2", " ", "d", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", "r1"}], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "k1"}]], " ", "r1"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"k1", "+", 
         RowBox[{"2", " ", "d", " ", "k1"}]}], ")"}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}]], " ", "r1"}], 
    "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"k1", "+", 
         RowBox[{"d", " ", "k1", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "d", " ", "k1"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], ")"}]}], "+", "r1"}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "d", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.731874701575111*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpToTrig", "[", "%47", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["k1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"3", " ", "k1"}], "+", 
      RowBox[{"2", " ", "d", " ", "k1"}], "+", 
      RowBox[{"2", " ", "d", " ", "k1", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}]}], "]"}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"3", " ", "k1"}], "+", 
       RowBox[{"2", " ", "d", " ", "k1"}], "+", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "r1"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"4", " ", "k1"}], "]"}]}], "-", 
    RowBox[{"r1", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"2", " ", "k1"}], "+", 
       RowBox[{"4", " ", "d", " ", "k1"}]}], "]"}]}], "+", 
    RowBox[{"r1", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"4", " ", "k1"}], "+", 
       RowBox[{"4", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
    RowBox[{"r1", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"2", " ", "k1"}], "+", 
       RowBox[{"4", " ", "d", " ", "k1"}], "+", 
       RowBox[{"4", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", " ", "k1"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"6", " ", "k1"}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"6", " ", "k1"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "-", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "d", " ", "k1"}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"4", " ", "d", " ", "k1"}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"2", " ", "k1"}], "+", 
       RowBox[{"4", " ", "d", " ", "k1"}]}], "]"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"4", " ", "k1"}], "+", 
       RowBox[{"4", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"6", " ", "k1"}], "+", 
         RowBox[{"4", " ", "d", " ", "k1", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"6", " ", "k1"}], "+", 
          RowBox[{"4", " ", "d", " ", "k1", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"4", " ", "d", " ", "k1"}], "+", 
         RowBox[{"4", " ", "d", " ", "k1", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"4", " ", "d", " ", "k1"}], "+", 
          RowBox[{"4", " ", "d", " ", "k1", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"2", " ", "k1"}], "+", 
       RowBox[{"4", " ", "d", " ", "k1"}], "+", 
       RowBox[{"4", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.731874940688365*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrigReduce", "[", "%57", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["k1", "2"], " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"k1", "-", 
       RowBox[{"2", " ", "d", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["k1", "2"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"3", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["k1", "2"], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"3", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["k1", "2"], " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"3", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["k1", "2"], " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"k1", "-", 
       RowBox[{"2", " ", "d", " ", "k1"}], "+", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["k1", "2"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"3", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1"}], "+", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["k1", "2"], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"3", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1"}], "+", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["k1", "2"], " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"3", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1"}], "+", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.731874962724321*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"detfun", "[", 
   RowBox[{"k1_", ",", "d_", ",", "r1_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
     RowBox[{"(", 
      RowBox[{"3", "+", 
       RowBox[{"2", " ", "d", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}]], " ", 
   SuperscriptBox["k1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"2", " ", "d", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], "-", "r1"}], ")"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "k1"}]], " ", "r1"}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"k1", "+", 
          RowBox[{"2", " ", "d", " ", "k1"}]}], ")"}]}]], " ", "r1"}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "d", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}]], " ", "r1"}], 
     "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"k1", "+", 
          RowBox[{"d", " ", "k1", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", "r1"}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "d", " ", "k1"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], ")"}]}], "+", "r1"}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "d", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}]}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.731874732404992*^9, 3.731874759839653*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"detfun2", "[", 
   RowBox[{"k1_", ",", "d_", ",", "r1_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox["k1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"r1", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"k1", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], "-", "r1"}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"k1", " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"2", " ", "d", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}], "-", 
     RowBox[{"r1", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"k1", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "d", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"k1", " ", 
        RowBox[{"(", 
         RowBox[{"3", "-", 
          RowBox[{"2", " ", "d", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}], "+", 
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"k1", " ", 
        RowBox[{"(", 
         RowBox[{"3", "-", 
          RowBox[{"2", " ", "d", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}], "+", 
     RowBox[{"r1", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"k1", " ", 
        RowBox[{"(", 
         RowBox[{"3", "-", 
          RowBox[{"2", " ", "d", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.7318749568085546`*^9, 3.7318749811842413`*^9}, {
   3.731875018662271*^9, 3.731875019586162*^9}, 3.731883566976986*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Im", "[", 
    RowBox[{"detfun2", "[", 
     RowBox[{"k1", ",", "0.5", ",", "1.05"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k1", ",", "0", ",", "120"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.731875004964673*^9, 3.7318753691940613`*^9}, {
   3.7318754375968657`*^9, 3.731875440060316*^9}, {3.731875503554953*^9, 
   3.7318755321938667`*^9}, {3.731875568149922*^9, 3.731875575462558*^9}, {
   3.731881187096493*^9, 3.7318812075488873`*^9}, {3.731881238927154*^9, 
   3.7318812950959578`*^9}, {3.731881346975878*^9, 3.7318815060358353`*^9}, {
   3.731885565925013*^9, 3.731885620159112*^9}, {3.7318856502403*^9, 
   3.731885650886888*^9}, 3.7319336142825947`*^9, {3.7319336728393717`*^9, 
   3.731933678969405*^9}, {3.731933863544339*^9, 3.7319339232082663`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
oevH7bky1KmQ/N+XTY4jXahfu3jDwf+ooM1s8Wv7cBeiKHGvFRyiwiuy99Hj
ui5UK3l+EXSo4H5f9ld+WBfSE4yerQAqdM92fSg63YVyOCYmjmFUiJxaq22e
6kQKS+rD345Q4e/I/t7LDp0oauJBn4khFZicWihrv34iwZ7an+3HGPjVfKkU
3Z/oyY/tLRdOUMHbocn09KMOxFR+8fuAMRXcuK1C5jLakX3Oh+orZ6hQZ1M7
e+tbGxqLXyz/bUKFU4F2XDs6Whn/J7DPdyhUCK7tibzc1IKO3W/PdKNTYcNx
h0X3iCYkeoztTYAlFahCbWpnXL6hIK1TLwWvUkHZ66Tk0HQt4twfFvj6GhWu
6mgpe1pWo9ktyl6xt6nwOojvaKJ5BbJid7svZ0uFOI7yhfzpUtS5WOmSYk8F
c/NBxfbAYvSli34rz4UK03ejhko185DW97ir2nepsGfpntMlySyUUTprUXqP
CrvM96rGnk1De7K1Lxg8pEIE92fuDykJKDzOB6/1oMJNfXzzzLW3iP9145nT
3lQY9lnd/bA7DHn5ip5oeUyFng2rswX+z9Gy+1UDmi8VYm6d/m+N1wvdtsnS
6/WjQoOY3tYyT3v0y2L90OVAKhDlRCp5iIaI88fUx4KoID6/lGFdvAV9N3yh
dCuE0V+uuX2jHUJHDvXKz4VSYa/Rj9wiAWv0ca+CjHMYFVaOVO69QrmPlMQd
xNbeMPhne/LcJM0PvRMoEXoURYW7eza559eGop1sm7ZyvqXC0AR/6ZUjMch/
4fzmZ+8Y+TEnfcUMExDrWDSnQDwVHLjCrb5kpyHnzgmWl4lUaMn6/Nb2XDaa
rD+4uusDFZwkrmYV3vuILEoeLkSlUqGZbREp7ShGbZl1MzIZVJBwWH8iqFyG
ykIthvbnUuF6p8alxe3VKCsx3u9xPhUmDPniWcPrUOyn3+oDBVT4keY/1fju
O/LodfQOKaZCa7ZwhJB/E9KX9ZVdraLC72kk+nhjF1LX/PH9fC0VjDPFZa/o
9KDdRtuc0+qp8JA19Xn+x17EcTuqyqKRCv5SdvvZZvrR19ws6+pOxr7Q89WW
VBlGeVX/BKR7qDDgncfve2AEJfzUKbjbRwVaS1/bGdlR9Pr3I4vWASrU3+AI
Ed4yhp6sf+VWHqICj0Ezy6uZMeTCvznryQiD/5KM0Eel48ha6ix9cIyRv/GX
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
44yI8TyM/Q+jY09N
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.731875060162136*^9, 3.731875293662829*^9}, {
   3.7318753448126173`*^9, 3.7318753701827374`*^9}, 3.731875440967902*^9, {
   3.73187550423455*^9, 3.731875533176078*^9}, {3.731875569911969*^9, 
   3.731875576404352*^9}, {3.731881188144782*^9, 3.731881208064187*^9}, {
   3.731881242483779*^9, 3.731881295593581*^9}, {3.731881348637444*^9, 
   3.731881506776883*^9}, 3.731883577356615*^9, {3.731885574727631*^9, 
   3.7318856206895103`*^9}, 3.731885651666689*^9, {3.7319336752356777`*^9, 
   3.731933699418643*^9}, {3.731933865156579*^9, 3.7319339238606787`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f", "=", 
     RowBox[{
      RowBox[{"Re", "[", 
       RowBox[{"detfun2", "[", 
        RowBox[{"#", ",", "0.5", ",", "0.4"}], "]"}], "]"}], "&"}]}], "}"}], 
   ",", 
   RowBox[{
    RowBox[{"solvesol", "=", 
     RowBox[{"x", "/.", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"f", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
          RowBox[{"0", "\[LessEqual]", "x", "\[LessEqual]", "5"}]}], "}"}], 
        ",", "x"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "5"}], "}"}], ",", 
      RowBox[{"MeshFunctions", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"#", "&"}], "}"}]}], ",", 
      RowBox[{"Mesh", "\[Rule]", 
       RowBox[{"{", "solvesol", "}"}]}], ",", 
      RowBox[{"MeshStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"PointSize", "[", "Medium", "]"}], ",", "Red"}], "]"}]}]}], 
     "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7318816235009623`*^9, 3.731881623502445*^9}, {
  3.731881681667758*^9, 3.731881720759666*^9}, {3.73188240633712*^9, 
  3.731882409293742*^9}, {3.73188253372805*^9, 3.731882535541486*^9}, {
  3.731882612500038*^9, 3.731882613477703*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
2pdq4POFo4+i/QSx78qo5WZTfZJ+24380hNC+bj1z35xGRF+waURcVzCGBlU
9smyzISEWg5+UWkTRqkzgVH317Hz0CYb+dCehhWrjgd4JrD5peX3SW5Cwz+h
K/e0F7HzlDzPI6wqgtR/bjHyz43IFy9zRvtlEdxQmzv9bVKPzHr/LFiuKYZG
Moe86uqN8Y9mb+T/PT2Vr0mjNc4ceXwnLAaMn8Nsa6fx9hhH6Nt8OktSrxww
4sCff5vSoW1B8UfN0zposG+xl3cogyNjTlrxk01QZvJrt7hbM3Qd/nCZz6oH
BpaJO5Rzz8Lufbr6Adl9YLNC1+ivEhO27X+922VgECyUuabFOlnglfbqusjG
EWAd5yohPxfgquGvKr8tY3BcVKJxnmsCpO1Pvs2tGYe8d5aZSSH1wJJhMdPc
5yDItaWaf7kEkTz+qW+YNQ/917/aZyTIkDrfvQfv3meA11R/AJ6TI7uy/aDV
iAUns/V6zvfJkP+STJ+FDCzCjraIAq/e5UTI/dRvzS8cqHbFzyH1Oi+hfdZy
727jQVJfcbXZXhs990ZvHXrKi2YP413ChvSRL7/QTfkUBYP+rmHGqRniiG77
vpjdVEwO8fbrDQE8xnFmnH81Hy6b0u26426Ipjd56t9P86GSlat+cYk+xh4y
v7+zURAtz9YfUHUBYqi6rCPrrhD+/TN0eQn/drJK/dfTWj9h3Owbo1KzyYwU
qBbsvLWChunix7ccS2H7SWZAsOdFGl7vG7TxGzUjE28UeMqmaOjhatSrP7Od
6Fa9dv3PQwy7Lp9cc26/GcZ1vJ5kNwLe9TWcSPjPCsevFQ8PeN+D4gu8Vt/j
NeH7/dV9Yd8IeOx0tQpTSobiZYfTi9d8gTAx9wBBkfcwGblol9zSC+eMYzgv
yDNg9UtpmUnFQTip1eMZWc8C67oG7ZK9/2Csb/8GXXUmPDmybYT5fRT+yzPX
MH83BVzebTu5b8/DzY7LFtefSpMttSbFhpvZPPCi5KqmrRzpWvP8X04HExIU
hTTqn8qS6HA3ekfEIohkTQQ86ZMgn63zgk6ZUdA/UrPf6gx7fpKhjk4FKiZO
V51J3Q/om1hwjzlOxcF6jfq2TkM81aUaHEL4MIpigcGjW/D63f8Sn+sKY5VK
QlkUm8fm+6537KbQ0OTAkHZsIJ14l1Yu8PjR8PnngXove/Y1nXNbdxsNH3+u
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
ASg8ZXU=
   "], {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
      "]]}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 5}, {-49.28930305794451, 62.83782275067363}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7318816293283777`*^9, 3.73188177321797*^9, 
  3.731882467349536*^9, 3.731882585104545*^9, 3.731882665608027*^9, 
  3.731933755169693*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["k1", "2"], " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"k1", "-", 
       RowBox[{"2", " ", "d", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["k1", "2"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"3", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["k1", "2"], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"3", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["k1", "2"], " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"3", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["k1", "2"], " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"k1", "-", 
       RowBox[{"2", " ", "d", " ", "k1"}], "+", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["k1", "2"], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"3", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1"}], "+", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["k1", "2"], " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"3", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1"}], "+", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["k1", "2"], " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"3", " ", "k1"}], "-", 
       RowBox[{"2", " ", "d", " ", "k1"}], "+", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["k1", "2"]}], " ", "r1", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"k1", "-", 
     RowBox[{"2", " ", "d", " ", "k1"}], "-", 
     RowBox[{"2", " ", "d", " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["k1", "2"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{
     RowBox[{"3", " ", "k1"}], "-", 
     RowBox[{"2", " ", "d", " ", "k1"}], "-", 
     RowBox[{"2", " ", "d", " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["k1", "2"], " ", 
   SqrtBox[
    RowBox[{"1", "-", "r1"}]], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{
     RowBox[{"3", " ", "k1"}], "-", 
     RowBox[{"2", " ", "d", " ", "k1"}], "-", 
     RowBox[{"2", " ", "d", " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["k1", "2"], " ", "r1", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{
     RowBox[{"3", " ", "k1"}], "-", 
     RowBox[{"2", " ", "d", " ", "k1"}], "-", 
     RowBox[{"2", " ", "d", " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["k1", "2"], " ", "r1", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"k1", "-", 
     RowBox[{"2", " ", "d", " ", "k1"}], "+", 
     RowBox[{"2", " ", "d", " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["k1", "2"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{
     RowBox[{"3", " ", "k1"}], "-", 
     RowBox[{"2", " ", "d", " ", "k1"}], "+", 
     RowBox[{"2", " ", "d", " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["k1", "2"], " ", 
   SqrtBox[
    RowBox[{"1", "-", "r1"}]], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{
     RowBox[{"3", " ", "k1"}], "-", 
     RowBox[{"2", " ", "d", " ", "k1"}], "+", 
     RowBox[{"2", " ", "d", " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "-", 
  RowBox[{
   SuperscriptBox["k1", "2"], " ", "r1", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{
     RowBox[{"3", " ", "k1"}], "-", 
     RowBox[{"2", " ", "d", " ", "k1"}], "+", 
     RowBox[{"2", " ", "d", " ", "k1", " ", 
      SqrtBox[
       RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.7318835456298227`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%137", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["k1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"k1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", "r1"}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"k1", " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"2", " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}], "-", 
    RowBox[{"r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"k1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}], "-", 
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"k1", " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"2", " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"k1", " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"2", " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}], "+", 
    RowBox[{"r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"k1", " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"2", " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.731883549300315*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"detfun", "[", 
   RowBox[{"k1_", ",", "L_", ",", "L2_", ",", "d_", ",", "r1_"}], "]"}], "=", 
  
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
     RowBox[{"(", 
      RowBox[{"3", "+", 
       RowBox[{"2", " ", "d", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}]], " ", 
   SuperscriptBox["k1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          RowBox[{"2", " ", "d", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], "-", "r1"}], ")"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "k1"}]], " ", "r1"}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"k1", "+", 
          RowBox[{"2", " ", "d", " ", "k1"}]}], ")"}]}]], " ", "r1"}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "d", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SqrtBox[
              RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}]], " ", "r1"}], 
     "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{"k1", "+", 
          RowBox[{"d", " ", "k1", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", "r1"}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "d", " ", "k1"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], ")"}]}], "+", "r1"}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"4", " ", "\[ImaginaryI]", " ", "d", " ", "k1", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], ")"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"2", " ", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}]}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.7318837151219873`*^9, 3.731883752512047*^9}, 
   3.731883898536767*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
    RowBox[{"(", 
     RowBox[{"3", "+", 
      RowBox[{"2", " ", "d", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}]], " ", 
  SuperscriptBox["k1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"2", " ", "d", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", "r1"}], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "k1"}]], " ", "r1"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"k1", "+", 
         RowBox[{"2", " ", "d", " ", "k1"}]}], ")"}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}]], " ", "r1"}], 
    "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"k1", "+", 
         RowBox[{"d", " ", "k1", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "d", " ", "k1"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], ")"}]}], "+", "r1"}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "d", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.7318837296613894`*^9, 3.73188376361596*^9, 
  3.73188389999625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"detfun", "[", 
  RowBox[{"k1", ",", "L", ",", 
   RowBox[{"L", "/", "2"}], ",", "d", ",", "r1"}], "]"}]], "Input",
 CellChangeTimes->{{3.7318839101262617`*^9, 3.73188391955996*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
    RowBox[{"(", 
     RowBox[{"3", "+", 
      RowBox[{"2", " ", "d", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}]], " ", 
  SuperscriptBox["k1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"2", " ", "d", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", "r1"}], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "k1"}]], " ", "r1"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"k1", "+", 
         RowBox[{"2", " ", "d", " ", "k1"}]}], ")"}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}]], " ", "r1"}], 
    "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"k1", "+", 
         RowBox[{"d", " ", "k1", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "d", " ", "k1"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], ")"}]}], "+", "r1"}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "d", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.731883920052243*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%156", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", "k1", " ", 
    RowBox[{"(", 
     RowBox[{"3", "+", 
      RowBox[{"2", " ", "d", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}]], " ", 
  SuperscriptBox["k1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"2", " ", "d", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", "r1"}], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "k1"}]], " ", "r1"}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"k1", "+", 
         RowBox[{"2", " ", "d", " ", "k1"}]}], ")"}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}]], " ", "r1"}], 
    "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{"k1", "+", 
         RowBox[{"d", " ", "k1", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], ")"}]}]], " ", "r1"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "d", " ", "k1"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], ")"}]}], "+", "r1"}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"6", " ", "\[ImaginaryI]", " ", "k1"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}]}], "-", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"4", " ", "\[ImaginaryI]", " ", "d", " ", "k1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SqrtBox[
          RowBox[{"1", "-", "r1"}]]}], ")"}]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.73188392266302*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpToTrig", "[", "%157", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["k1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"3", " ", "k1"}], "+", 
      RowBox[{"2", " ", "d", " ", "k1"}], "+", 
      RowBox[{"2", " ", "d", " ", "k1", " ", 
       SqrtBox[
        RowBox[{"1", "-", "r1"}]]}]}], "]"}], "-", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"3", " ", "k1"}], "+", 
       RowBox[{"2", " ", "d", " ", "k1"}], "+", 
       RowBox[{"2", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "r1"}], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"4", " ", "k1"}], "]"}]}], "-", 
    RowBox[{"r1", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"2", " ", "k1"}], "+", 
       RowBox[{"4", " ", "d", " ", "k1"}]}], "]"}]}], "+", 
    RowBox[{"r1", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"4", " ", "k1"}], "+", 
       RowBox[{"4", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
    RowBox[{"r1", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"2", " ", "k1"}], "+", 
       RowBox[{"4", " ", "d", " ", "k1"}], "+", 
       RowBox[{"4", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"4", " ", "k1"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"6", " ", "k1"}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"6", " ", "k1"}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "-", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"4", " ", "d", " ", "k1"}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"4", " ", "d", " ", "k1"}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"2", " ", "k1"}], "+", 
       RowBox[{"4", " ", "d", " ", "k1"}]}], "]"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"4", " ", "k1"}], "+", 
       RowBox[{"4", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "-", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"6", " ", "k1"}], "+", 
         RowBox[{"4", " ", "d", " ", "k1", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"6", " ", "k1"}], "+", 
          RowBox[{"4", " ", "d", " ", "k1", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"4", " ", "d", " ", "k1"}], "+", 
         RowBox[{"4", " ", "d", " ", "k1", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}]}], "]"}], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"4", " ", "d", " ", "k1"}], "+", 
          RowBox[{"4", " ", "d", " ", "k1", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}]}], "+", 
    RowBox[{"\[ImaginaryI]", " ", "r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"2", " ", "k1"}], "+", 
       RowBox[{"4", " ", "d", " ", "k1"}], "+", 
       RowBox[{"4", " ", "d", " ", "k1", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}]}], "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.731883927072547*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", "%158", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", 
  SuperscriptBox["k1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "r1"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"k1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "-", 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{"1", "-", "r1"}]]}], "+", "r1"}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"k1", " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         RowBox[{"2", " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}], "+", 
    RowBox[{"r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"k1", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"k1", " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"2", " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}], "-", 
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{"1", "-", "r1"}]], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"k1", " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"2", " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}], "-", 
    RowBox[{"r1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"k1", " ", 
       RowBox[{"(", 
        RowBox[{"3", "-", 
         RowBox[{"2", " ", "d", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}]}], ")"}]}], "]"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.73188393119744*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"detfun2", "[", 
  RowBox[{"k1", ",", 
   RowBox[{"1", "/", "2"}], ",", "0.25"}], "]"}]], "Input",
 CellChangeTimes->{{3.731884162358035*^9, 3.7318841676126537`*^9}, {
  3.731884351187694*^9, 3.7318843723272877`*^9}, {3.731884854438098*^9, 
  3.7318848658720503`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["k1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"0.5`", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"0.8660254037844386`", " ", "k1"}], "]"}]}], "-", 
    RowBox[{"0.017949192431122807`", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"1.1339745962155614`", " ", "k1"}], "]"}]}], "+", 
    RowBox[{"3.482050807568877`", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2.8660254037844384`", " ", "k1"}], "]"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.731884168049685*^9, {3.731884357046349*^9, 3.731884373123047*^9}, {
   3.731884855784042*^9, 3.731884866637556*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], " ", "+", "r1", "-", "2"}], ")"}], 
        "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"k1", " ", 
          RowBox[{"(", 
           RowBox[{"2", "-", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{"1", "-", "r1"}]]}], "-", "r1"}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"k1", " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            SqrtBox[
             RowBox[{"1", "-", "r1"}]]}], ")"}]}], "]"}]}], ",", 
       RowBox[{"2", " ", "r1", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"k1", " ", 
          SqrtBox[
           RowBox[{"1", "-", "r1"}]]}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k1", ",", "0", ",", "15"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"r1", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.731884102336904*^9, 3.731884114463093*^9}, {
   3.731884261553359*^9, 3.731884285591694*^9}, 3.731884345901765*^9, {
   3.731884389003792*^9, 3.731884415218318*^9}, {3.731884451075337*^9, 
   3.731884572107297*^9}, {3.731884981153618*^9, 3.731885030750835*^9}, {
   3.7318851928765793`*^9, 3.731885194828619*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`r1$$ = 0.38, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`r1$$], 0, 1}}, Typeset`size$$ = {360., {107., 112.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`r1$122451$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`r1$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`r1$$, $CellContext`r1$122451$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[{(2 (1 - $CellContext`r1$$)^Rational[1, 2] + $CellContext`r1$$ - 2)
           Sin[$CellContext`k1 (2 - (1 - $CellContext`r1$$)^
            Rational[1, 2])], (2 + 
          2 (1 - $CellContext`r1$$)^Rational[1, 2] - $CellContext`r1$$) 
         Sin[$CellContext`k1 (2 + (1 - $CellContext`r1$$)^Rational[1, 2])], 
         2 $CellContext`r1$$ 
         Sin[$CellContext`k1 (1 - $CellContext`r1$$)^
            Rational[1, 2]]}, {$CellContext`k1, 0, 15}], 
      "Specifications" :> {{$CellContext`r1$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {151., 156.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.731884518889483*^9, 3.7318845727867193`*^9}, {
   3.731884976611011*^9, 3.731884985432497*^9}, 3.731885034605878*^9, 
   3.73188519520113*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"detfun2", "[", 
     RowBox[{
      RowBox[{"x", "+", 
       RowBox[{"\[ImaginaryI]", " ", "y"}]}], ",", 
      RowBox[{"1", "/", "2"}], ",", "0.5"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.731927123942389*^9, 3.731927185963764*^9}, {
   3.731927377551551*^9, 3.731927437026258*^9}, 3.7319275582866507`*^9}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
mbQ+ANf8Y5xqvVLj8SM7Bvu95Nqw4Xn+9nQ5+z3MlPOoODv7oQ+QR/B0f6fK
cbjAK+l34CNyhibULnBf+h1yNkpXqMT1vy+IHChf9I9yi6ocilZ+fqQZ83zH
8jsFD6t+DzN7Wp79YvS/u5T/H2k+PC9ybe/EndLv+K0Q3/rernsTVFzgrh/6
oMuj3/V30b9afvSj5kHZT5kX0I+aT2ccEWlS+K/NX+JFSvQL6X5xxgthJvqM
/6Yf/k4UeweeFq2r8qDS4wS1XhFmam+9NL53jQQ13sPI0u9k6XfS/Y76u+a6
9dC7z3Hd76T7HeV71k8RM6jXCt3vpPsd5f3j+1w+NrKf7nfS/a7rV/2uykeR
ll/pA1n0gSz6IPyofifd77ofVb9LvzjjHXc/Yrzrfld6Qqhf6QNpfdDzvrL/
ZLH/pO0/6tf6gPJO+y/6QFoftH+i9IG0PqC80/6LPpDWh+TLiz5Q8voQTpXb
Jx6OSxeu7T9p+6/5UfZc+FT6QMnrw//ilYGXlp8q7qHiX3c/Ov3AcIKdd67n
RBLsjHM9J5K8whNS5ajrof0TsvgnpP0T4JgflZ0nbedRHvOvsvOk7TzKO+d9
sfOk7Xzy5aOkPOYp5Q+IPGrel3ap+V14UPO48Kbma1LztbQL87XyG6W8c90g
msqs7LYgevw/wgPw50OPlw/9XtbnBYc/hvaiHfAPUQ44/Ez8jV/4vWgvcPjP
aC9w+MP4G/8OfjX+xi/8cxVHkCWOIEscQZY4gixxhNSPvzHOHsz/LVvKOg1E
HnwfuPgHjI/xm//X25HV5LsaV/VLPc75N9bsiq0390PJ3C7n/BtrntTZeG5R
409UHBpjMpbK8Sbv6mzKbseY/tVnHF38Jr3LabdjzMJxy9fdjnDHEcAjVl2q
v2npW2WHY0yxuy+Wl/rpqfITosynZbbkLTraQ8kZZV5+uebLoeal8geiTJe4
pV8d+veu2Af8f+it0nPj1PMwqef1ootmb53Tan5340677Y4jnPO4Wx7nPO6W
3zmPu9vrXDeLNtlS+g2Z5ZtZ+dXhBnbbyVu4aTY1+9nZn7xR/lW4Gbwgslto
xYeKt3AT26XO1bwdYpS/FG4wHzn5CTdFZvSoMDBliOLHjat5zeh5TX/XyY+W
87bIpeYR0u1V85rwA97Q/0+HBHWa81jsquAhod55/Ea+FN6AZy3R4wf/wu64
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
fT3giMfT+O+P/LqtO77guM8s7eez/f7yRL3/SNh/VOUJ5aFX+I1g+fH3Sv7u
PpYf+N9cf13erwT+Hde/etmqW5kXLNJ80ggV9/F+Kw1X/HN/0WsV1/M+KWGf
FHh7/u5U/q7in8C/2s8l7Oeq/iX0r1o3IKwbqH6k1QoP5fXnMF5/ht4eUP0C
fIylXxqynLdYTvFDWM7FLCd4O8r6/xvrv4qDjI6DeH+csD8u69hc/8gmg2fn
GppS5RNGG/ilqrxBeSW/schvIL/sH/F6fjPe/wWOdbwOtGNL8+JH9T6ywT4y
8L483tO+cOoP7y8b7C8Dx/pbV64f885VPu91ndcZgCcwHqvwgTyut7I+AO/E
+DrG1TgylnFkVit9Zj030HO1HmKwHgL8NuMXGFd6aLQellP2Bzj8B+S9K7tE
sEuKB7LwQOsUzjyThWcCz8pekcVe0T5lb5kHuqD4wbpBaV4/UTyQ5mEp15+a
24t56nce7xX5/hPgm9T9PKjHj8fd9zzugGfhcTdKjSMeF2QZF6THBes/Qf+V
H07ww5X+U1dVD+8zGuwzKjtjYGfQX8yD2ct2DzjzYI4pHHbpbz7v7/Trwo3h
cwqKZ2PhWe6fcfbvx+MC5zIvKr2Cv4rvOvPkw8zM6eVynssUr9cxjF7H2KDu
G1HzgglTONp7gnlw+l37TIUhvzwo9LuHytsPI8jjzNsPMzsDD1a4+kr7+e71
ebVubLBuDBz5Sz8GrPTc9u0LXT9Z6iddP/wQXQ/sSYU0raP/6vBCrXftM01f
dO5259RKtb60z9Rj3Om3h5npzIPCCbjT/3Tz6VynDaG7bYPSz2mQqPQhhPIO
OlwkW/g8tf4ZQqkYV/1I6Efn/Ptx/TjvnOnGuajFPrtUXBxBb/geBuf8G0Ep
ubyyJ8ZiT8woNY9zPo9BPo/KazLvC/3e5/c/78l3EZ9lb1or98aRN7X8xiK/
schvIL/i31j4Nxb+TfL8hxltz3X9wCez/j/mex6Af8F4nMKXsD+8le9/AL6X
8W2Mq/FL0Del52TRc4KeK72VeqDnmGcX8X0IwDHPLlQ49LMF35MAeQI5LyuW
805V/ir9wnqizktSET6vhH7HehTy+ZWcxiKnschpIKczLg4z29n+AE9gezWC
7YzCCTjqh193ge9PAA6/7qLC4Z9YypMuD/t2m+9hUPuhFMj3D6h5kyzzJmHe
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
7QefO9kuQT7xe5cmyYPyej3q/wGEbnYA
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
SXD33Hrc15ltWRMFnxJ8PdoWaHN66nnGdnFmarvJebpnjua0h+7fR3vpoKrt
YPdltl/dLPh0sA/q8cT2LGwMryWWt85Obft+gb1UWp5Ej16Wmla+xD5ILRe+
nFi2xHepLit/R9r+quDS3DIUdGxlbjoDPfwrNy2EX+ATeyKxrxG/05OJ9e1R
pevw0+FjnJt4HIOjvo/fHL72RpR58FPSHjsauj5+CHwQ+N/uT+yDw2d4X2L/
TcfUsnezxLrqENWthW4e9RT+b5SaTkGjPqvaXtQr2j+RyTdKLJeDjyvs30Eu
2lald2qZHLvVWbn3//q57SJ/xvoxqd+B8Z+Wux76cHbuM9IM24CeN1rX94Ou
xP6hIy1S001o5lGp5Rbe5SyNpx46mdb9c90zDFmCe3PL2GsInpd6zVivY1LX
t2Ctc9sE1hVsnVqXX1Kx/YT6bys+w7xL77jm9INOgfyNHA7vbxLn8D/ZA9kA
W+PoKKuvBd3MPceDsa1q7uYL36Q0j4fXIw+cG/k+JHhG7nXE74adgD3eX/Av
3fNPYvmTc4Oexbnomdqux7nA5gN9+U73/FqaD15Z2G8OPcGPviLqaNcWpkO0
P13tG2OjEVyS2Y8NLcXPhP/uEtU9HuzzfCuxHwu737I4htNK0wR8vgTfYIs5
pmJaTD/4jrvFeuwzs+K9PA//FDpvy8R6L/glgq00ntPgZbljaVCi4ON9U9u1
eMcWedyDuWMH8KFfpPqVpdvfWET/fGobGbSY/Ya8ji/638Sy+uml4xPw7xNH
gb7ZJnFcEHP4TcXyPO2Jn4H3wIMYzy9RP71C9z4Q5xkad1/kU7wD9qKjBWuF
fYu7peZ/0LOekaZdjR5RsUyL7xof9lj93zu1HZCzcXCke4z/4Ui7FlYs32Jv
RSbuW3VsQrvc8UVrpsax6YFj18OXg08HW8SBqf3C7PMh8VnYG9vmto2dk9tu
gwy+nsZWi8/Crjs5tT2H+YGGMh58iI9Gmvl5xXQTHJ366dQ6MvTlKcH1U9Mc
ZCLqOePISo1jPWcCmZhz8Qs+2YplKnQDZPnRGtdFqt9cbbYXPD/3vR1y28k4
n5zN1uirghM1N9frngkVy9LY1ZCDsBMMinOOnI2djfpVuc83/WDPubW0PaC+
aM4n6usgtelRtW4ErYROvpDavgH+jGDT+F7IdeCToi0K+wD+sGdT49CvKaX1
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
Dng3MjFxNLsVzou8p3B+AbEE8wvnTr6stisE9yucqzIbeaZmHryG6vsXjosg
/4P5Yt7ISegU9Rfi1PeMc85zexfOSdlX9z4R7O/ZWHCHuHasy33Beafnqu7F
4BxL4jx3Kiz/9BK+XeF8kD2C40BZx3N0z4PBsfKj8UcEx6yfJ/yh4Hj684Uv
DM6ZgVa/HXUtzlHjquMrdlJ/bwXn3kDbnwvOC2Xvja469+oFZMDCeTQHY1cr
nC9zqPBehXNt9hHerXC+257IuYXzWXpgbyuch3Wg8L7Cn4Z/CT+gcF7SYGhL
4Typ/YT3LJxntDf0pHD+0V7Ce/BuwvsI37fw2AYIH1Q4/+uA4NzXecIHCe9S
OL9md+HbCr+DvRqcT0tc1fN6r/OrHs9LmfMo6vIp1GbnwvJkb+EDC+eU7S+8
X+F8W/bAGyHmQQm21z45I7MM2U74yMx5VT8E56fxLsuC89wYP/lH2AaIJ9+r
tLxZF5NQWmYk1utD5jqzjky8NXIHsRP/sGcyxx39HRx7xByuCo4BYvx/BueE
MOaVwXEwzH9Sc8zQIcLTmuN+WMdqzfFAhwn/PjiPjjkn+JCYIdb9r+D8Seb5
x+D8Otb98+BcJnjQt8E5UezbBoXjLi4tHL8BTh35ceScDi6dT4uuQA4sOQbI
Po+VzjHEtrF/6Tw45OJ+pePmkaeIDyH+jTjBNQrH8WODII7uu+C8O9ZuaXAO
IXtycXBuFTzx6+A8Mc7UkuD8MfbqF8G5WPDWr4Jz3tg/XwbnwrF/yBlBp/4C
+To4v44z/ktwvhk0cEvN2zdV8/1OwpdWneP/be68Cc7sN7nzDjizW6ETVv2d
gT2Fb5s73n5J1M3hL+TFwfvOzZ3/grPsdcHvcufFcN43072nZs4HbCN8eGZb
Slvhx2aWW8hzITYCfX8L/E9Vr1GfmuXvC4PzZdBbidtar+Z8oefxd5TOK5nF
vlX9F1XbeYjnQ8clH4bYa2RL+vktOL+Oc0q+2Ndq8zA6ZnCuHXTg1+D8Os7+
8uA8PfjUH8F5uZxl8sX+y4PZWs+dlzk/tLPw5VXnlZPPQJwF+b/kKuO7Juf3
28xyC/kvA2POUivofM26GfIMuUXYUr4qHMuELwO/R3+1uTG37YIcBnwyxIu+
G2yHQg55M8S8x+BYZeL9St1TzZ0vvXfuGL/lUabKcvuw980dj0psKvE28Fli
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
8BF0kNVrzntB7vo/cnO/Gw==
          "]], Polygon3DBox[CompressedData["
1:eJw1nAnYTtXXxs/znPGtlCFjIkOJZC5JyFAhJCIl0UCGaECzQkqUZOjfoIFC
hQppMFRKpUkREc0aaE4pDarv/rnPd13vvt61zt5nn2nvtdd9r7WfGudf0mNE
MQiCWVEQ6C94Jw2C83Tge8nLkyD4Lg6CtwpB8K8qjy0Jgh+kvy39P+nNpV8m
fZbaH6NjB0oep/MrSD4lDII2qn9X7a6UfpXKesk3qzRR+0/z9uvUfoD0O3S9
/SUflwVBK+m3q+5knV9bx0ar7Zs67x/VXaPjT6n+BrU/QvIJuseFkvdT/Wuq
761j+he8qXPOlPyQygNqf4WOzZF8lfrbpLqUc9X/QukPSd+h89tL3y19vtq3
0bEpkjurXVfp/0ivIXmUjq2XHEpuofajpW+QHkk/Xvq5up+Pda16vEzpy1Xf
Qec3UZtekk9Xu7OkPyv9F7U5Ifa7e13HJkpur/OX6tTSqntdD3KLjr2humYq
rSQv1/HJqn9P58TSb5feRnVfSz9Y+pW6xkbJieSWun43/e+h+h8C3/Mfqn9c
+hNqM1XyqypnS+8sfa+u/YLaHKa2T+j7va3rv5L6frnvSurvL/1/R20L+n+c
9LY8t+r/07Hakv9U+yelPyn9Dsnf6/4el/ydjs1T/Y3SG0o+WqWl9MHS++h6
69Qm4P5VnlDdqdIPlVwu9rNN0bEuuqcv1OdE7ldya13/F+mzpT+iNj9LvlHt
V0s/X919pjYMhlelD5V4k+qfUWktvb7an86zq81zkvvr2M+hvwnf5lyVBZJ/
U3le8iCVZyRPUP8vq+0F6u9zztWxSZJfUP3vkivpWC3pf6icKH282r+g9lVV
35BvH7r/vjr2k+RNfH+1XSN5g+71J52zTPVnqTwk+Ufd471qO0f6JMnnq5zG
2FH7ZoxXtVklfaDKMskzdfw1ySMZr9L7qn17yT/qeFO1/1XHVkq/UGWp5J9V
npZ8tspc5qfuZ62u17jg7/Ojji3lXRVsI3apPCP5HJVHJD8Q+93/pHMelbxZ
pbme51Vdb6Oe5wVdv5vqxunYKsktdc6vkq/VOe/xbnWsk+qPw6Zo/E3QseqS
P1bZn7meenwxzjro/kep/rOC5wRz41fVz+XaOnab5MUqzaWPUt1Jan8cz6jr
Xa36DZIr6hqD+TZ5fQvd4x7VVZZ+ovRX9f8I1T+t+1+numulL1N//dTmEMlX
qyyRfmXg8f6uSiO+v9qvV/tZ+v+62l6hcqSu977qj1X9Kzr+nurPkH4u9i3w
+Oqr+3lfbTMdb6Xrv6b/dVT3jNq/o/Zv6Hn6MfbV5h+1/Vv6Uuk9pU+T/LrK
OdKnYm4kX6fzn5beX/WHYV9VGqruefX3rvq7TG0uU92ruvYxut4BzPeCxzRj
+wqVhZIv1TkVJbfWOX1UP0ftK6j9A/rfS3pvtTkNe6qyWPK/OlZL8uHYm4Lf
Ee8q1fX6Su+R24/bsLvSH1b9FMn1VK7RtXrr2FGSp6j/h1T3lspk6UP1zFVU
f4Duf5bu5RyVt6XfLv0/yTeo/gTpjaUvoV7nXCT9XvXXj7Gp69dSXxWlnyS5
Tuz7YQ1hLRmi8yuzfuj8e3V+VR27PLANujK3P8OkPyJ9tOR/dH+/SD+/6PVl
fmzbtltlruQ3U39fvnMnPe92tT9c1xte9P1UURkbeEwxtliv6Gubyt2S1+v8
+swHyafq/D76P0j6RSpn8w5VTin4G/Gt/kr9/vkO5dX+a+lfqf4LPU9X6ZMS
P0836Q2kj9D9fBW4z7N0zsNqf5jk/XVOM8kXq31V1h+1v1/vY5j0Q6QfKP0+
6cOlHyq9rPQHpF8vvaX0RtIXM1+kN5N+pPRFjDfptaVXlj5H+gXSy0rfq2vO
lH6J9JqMNdU/yPouvan0OtIXSm+pe6qse7tY911X97+RMab6l1X/uOq/0vHZ
qm+kMk7ydTq/heobqP4J1Y+Rfrz0htKflN5R/6exfqt8KvkE9X+I5Et0bj31
f6Hal1P7f3V/d6r9QOkHByyeQfA/6YOkl5dalH6X9FP1/26df5DKdsnP6/4O
VP0J6i9Vf2P0/3/0pXKx6r6U/qDaNlC5XvL3uv5dqrtEdUerfXvpR6juatXV
L/Fx6uljhORJuuaAwGOB8VEhtq2+hznL2Nf9VVB9xH3RVmW99OnSQ56PPphb
KgOxRap/R/V3qL6g+v7S35U+TXpR+qWJ1zPWtdmqa6f7q4190/0dpfqb9P8y
1XfSsf9J/jK1fT5IfXcp8XwLi/Yx5qu+gfTzAq+JrI0x18N+ST4Nf1JtXmS+
Fr1e1lcpy3zSOR/qHkqkVyt4jWetT3X+BsnTJHfX+Zfr/5Gq/1rHZktuwzuQ
vlL9VlH9odJ3qu5h1fWS/kRk33No3mZhZFs6RPoKya3UfnDua1VT+/p6H7MY
H7qXNYxvxqH039RnAX9Oxy7KfYFD1f53vY8FqntMx36TfKLqz5e8SvWHqL57
bFv6Y2Afsh3rkOrX5T7wdLV7p2gfsgO2Az9X8lEqzWOvc6x3b+f2FPuKjA3F
llbTNS9Vf69IrqnrlVV9XXTV3xTbpmHbTsz9x6OxedK/COzjjVV5Xvoqrhe6
IK9UWS95jOqXYz9U6kqerPczUueeprqGul612L7cenx8yXt0P4uK9glvT/0d
+B47ivbPZ+lYpaJt1Afq6znppVhLpD8LVsBHLHpM4f9Xj+1bsOax9t2LfyU5
VamDr6BjTRifkvfDHse2T++o3VJ9i4mRfY+RrJnYbB2/WfJHBfuP4AN8VXyS
zqnXF2z5xyqzYvuh+KOfFOwPPqg2VaXvJ72p5DtTv5shuuZMyZ/Htm9ddd39
dT+L9X+a9GH5mLhW5evA7/R6tb1QfX7A+FD5XXJV9XEJ67Xa1dD5VfQMX6ju
frU9Q/qRsZ99dO5TVFf9t9IXMc5UP07vtDP2SX0tU93BKh+p/h7V91T9NZH7
265yn46NxC/BV5M+Q/JMlY1FY4qukh9X+62S9+b+xlj130n9t1T/T6nvUipb
sF/4Ber/MbXfLP2P3J8qydwf/Z6u+vE6/1Sd30rnP626kdht6cOx2ZHXGNYa
bPpWnbNax0YwnlX+ivw8fJv7pJeTXFblQ64vfaPe3bEqt0nuoD4+Ud0x0m+V
3l76x5nt9dHSHyjY3mLfmhWMEbuqzWq1uS+yP3whvnns94fNwfY8He+DMcG8
fH3omHp9Yp16lrmv/2Ww14wXyYNUyuFbs2ZLfjL02sgauVodPaOiVxLMz+35
HZn9m1n59zol9XrCuvKM6l5UuVdydx27QHVtU69PrFOfqW6uSrXQPia+ZiXp
nxc9Z7eAhaVXCb1mr1H9Y6ltzSUqnSRXVP1nrGWqLy95nkp1tT9S+lq1Pz71
+so6+6nqHlOpJbm+6t9SfQXpn+j8Smpzstp+p3tdhKwyQ/J81R+m9nXV/nV8
Q7X5UHWHqrSS3EelheTv1KaJnv8Rta8huZ7av6H2j0qvKf0oOADp3cDzar9T
fT+nup7wHNKns/5LPiP19bmPFaqfGhkvLcBnBUuFfj7uZ4v6uzsy/lqs0iv3
6Q/N3ye+/sb8/fI+wEJNI3Mp3XL/uJGuN0HyiWrzkdq+p49blN5G+oeZff5M
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
vo65Kf1X6d0SxxeqSP8FX0b6I9L/Uh+fZ/ZpwMYvhfZ1uqr+LemV1X6X9H74
6dJ/yvEB35hvXUHyz6rvJH2t9IOl/yj9K/iHomNSN6TGXeAv8Ps92KbEfOyh
kn9T+46MKenlpP8gvTPPKL289J+kj0ztCz+i+0hK7HNdr742RvbF8LHAKqtD
+174bGDbtaF9OTABWP3N0FgBGzchtA3G9pEHQD5A18B4jHjkioI5rCA1xic+
sCo09u+MPZE+Xm3ej5w3QP5AN/xHtWnPOip5nI5tktwNsINvrbI5so8Jtn89
tO8J5wO2fyM0FwTGB7usDI39l+icCwq+p3PgHXRPY8GTkj9Q/QK1/6VoH5v1
BqwBnuIYdcNye70n8tiFEzpHcqmCuSLGF/zQTvXXWO/3Q72TAwrmqH/V+Rin
qaHHGLkAaWLuD07vWcmXqb/+gbEx8QY49mm5/RiQmIOHi+eb908c4yLWxRjt
h65r9JDcKPenRujYbuY23zRxzIHYA8dexFdLPBYZk3XAR4m55oNYY1LHGOCd
4J+IPSxVv7sCx0zBD3D88FTwVXD/xBCm5/PvPNX3kf54bHvfSHqcOPYGp7Ud
f5s5GtinIHfgVumjAnMBjXTuU4m55hLdz3SwWmKswBhlrB6oNh+Ffscf4ftn
9o3xkbH3W3WshLVH5Re1bxwZp4PX4Y//if2+4Xw2SR+uc84Mcm6AeLL0gYGf
kWetmphrxud8TvLPOj8umBNYlz8PYx/OBu5mSWJuAo7ie3ynyPbpPda01JwL
vvnv2Ay1zXSNdarfI30Nvk1iuQ3+Fv6C7qd3YC6jDvEf6ecG5qr2xb8Sx67e
xR8B30gfEZgDBA8SQxqm4zOLji19n9g2wgHCBc5IjJ0X5fjzvsRcwRh8PMl/
J47lgJnxZ/hGfKt5ub90W2JsOj/Hk9MTn7swx7twcvBirDmsPQ1zHw1/6lY9
y67Qdhx7DlfAHIJn28e3SZ+t0lP9TZY+R/KjiXMv4FzI3amQmitnjuNPHJw6
VgOHBV4vnzqWw5qB/1FD598SOCZTVvon0nsF5oDhgiuWOO+B/IdE+l2JuYYv
9fyHZI4XtA9sk95NnHOBXcG+YPvuT8x9wEnAte9M7MvDgcKF/qHzp0o+mD5V
97HKgQXfw+7Y35hvDX/VPPWYZGzCXx2X3y+xxVvgiyTPSZzLg09P7tGXoXlp
+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
8az17fBPEo8HsBDrV2PpR4DHInOs8Bv4X/hmN6jNUakxD9iH/IXGqfkBsMeE
3N7go+Orw68dndpnwXchhwXHsVni2BgxDvh//DV4Ovi6BqnP4dy2uT8HPudb
koMZ5N+LXChiaOyN2ZP7WuRgYD/wYfFl4fBfyP3vBpGfAf/xzsR7a/gGfIt7
VHB2ibGS24n/flLkb4p/SUynfex8SGI9xGyJ3XIO+fDgb2zjeOn7JfbfG0bm
bOCf8PePiTyGR+ffj9gM8xHuD/8ILosYxmDJf4I5Q89PYhlgLrAXOS7vJ86h
J++MmCSxybWR40TEi4g9gmeaRR7TvJ/zdc4bBe+Jgh+6V/rEwDn1L6WOARML
Zk1k/1HZfDySUwu/TX4le4E4xlgl3oBv1KhofM0awlpSvuj1l5zwmrHfMbni
5CSSm0hM9v7UPg6+Tp+i49XjYud8nhSYz2Q9p6+6Ko+m9mf3i72/pnTiHBZy
WXoWff8vp+6LeDe5L8S32UvFHg72coA328SOeaOz/4PcKPaIvJC/D/raxPcD
G5d4nwz7Zdam5jfgxuEgDkuMv6eE5uxvlPxa6rbkmJBrQk4wMXviey+mjonf
p7b/hY6VsweEHFr2I7A3BH6AuCgxLWJb5N8PCPzNyZevnzm3ghwLcqEq5Pb7
j9D5vPh3YG1ieMTyWsS2jeTskrsL5iW3hFxOsDD+FNiVnBJyS8jpJrebGB2x
OrAtvhQ5ucRjyff+tuA9VOylKp+P1z2h85uxodhSMAC+72D9n1E0Hzg09pxl
7jbNsQ/779grwp4/9v49rGc6JDSmeCV2zGBjjrfOz+wz4DsMLTqfspmONQic
U0b8sWnmXDhy4MiFA9Myd+F0wLo8M89OPmsN1XeTfkPsPTJfxt6fRa40OTrk
6jRUqR44p43cNvZzENsnBk0smvg7uTjE0ImlN8m8f4ecPHLzGmSOh4DXya1j
/SO29UNorgfMBnaDkwVbvpf62cAcjO+PU9sSchbJdzws872DIQ7K7HPhe/FN
iH+S3wLXSYyXWO9XiX1jMCfY84vEeDrIsSn52KyFxHSJ7bJ/hr10xKSJTRMT
+BTfM3Ks4KjM+0/gCOAKjs/MVYMZwY7ECD6SXjdy7IB8cvZTskeQvYLs9yFX
mRg1sWowGFiMNY21DZ8I3whOFG4ULguuG8xPvGZz4nxAOAy4DGIUn4CdIscu
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
          "]], 
         Polygon3DBox[CompressedData["
1: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
          "]], 
         Polygon3DBox[{{1549, 1548, 2161, 1135, 1136, 2162}, {1750, 1111, 821,
           822, 1112, 1751}, {1675, 998, 1141, 2163, 1555, 1556}, {1556, 1555,
           2164, 1142, 1143, 2165}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0j1MU2EUBuDTIpSCpRgXTIiGOJiGwGgYxITBOOhkOslWJxxkcQBtBCad
GIhSEP8WDLMRYdNEw09iiKKigiishMWBgQCB54akzXPOuff9+n23t6XUe+NO
KiImfAfSEUl9iv/5pjqike95jkts5zo7uc3rHMlEZGW61VPqgrrVQsPM1kTc
Nu9Sd5lN8YxZv1kzH7GFFRb4mh2c5lV+4nlr3pV9J/tNX+ac/nFVxHf9E/7g
KFdY4U+O8RfH+Zv7JyLm5Wbkn5qtJmdQL5hN6Nf0z/iHz7nOF/zLl/zHV9zg
F2v1yc3Kb+ofcFFfsudlfZEfeYVveZGTvMDRZI/OlJd5qK6rdQ51UT7NvuTZ
u96hvmw2ySa5HvMMb3LXs7/GLV7iGtv4mWf5wX07HJLN8xbL1jpt/w3Jf8wc
8zzJHOtZzzpmmeWyc96XG5SvTZ6p9VfV98yq3WObUUU/Fym6HIeui8UBjWKP
PvHVsD91/J4dAXxcTJo=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1458, 1725, 929, 1457, 2196, 1635, 1459, 2197, 1636, 1460, 
       2198, 1637, 1461, 2199, 1638, 1462, 2200, 1639, 1463, 1082, 2091, 2310,
        1907, 1726, 2201, 1640, 1464, 2202, 1641, 1465, 2203, 1642, 1466, 
       2204, 1643, 1467, 2205, 1644, 1468, 2206, 1645, 1469, 2311, 1727, 1646,
        1728}], 
      Line3DBox[{1471, 2092, 2252, 1470, 943, 1472, 2207, 1647, 1473, 2208, 
       1648, 1474, 2209, 1649, 1475, 2210, 1650, 1476, 2211, 2093, 2253, 1477,
        2094, 2254, 1478, 2212, 1651, 1479, 2213, 1652, 1480, 2214, 1653, 
       1481, 2215, 1654, 1482, 2216, 1655, 1483, 2217, 1656, 1484}], 
      Line3DBox[{1486, 2095, 2255, 1485, 2096, 2256, 1487, 1729, 1831, 959, 
       1488, 2146, 2218, 1833, 1657, 1489, 2219, 1658, 1490, 2220, 1659, 1491,
        2221, 2097, 2257, 1492, 2098, 2258, 1493, 2099, 2259, 1494, 966, 1495,
        2222, 1660, 1496, 2223, 1661, 1497, 2224, 1662, 1498, 2225, 1663, 
       1499}], Line3DBox[{1501, 2100, 2260, 1500, 1733, 1734, 2313, 1502, 
       1730, 1832, 1731, 2312, 1503, 1090, 1834, 1732, 1504, 2314, 1739, 1740,
        1505, 2315, 1742, 1743, 1506, 2226, 2101, 2261, 1507, 2044, 2045, 
       2382, 1508, 2102, 2262, 1509, 2103, 2263, 1510, 979, 1511, 2227, 1664, 
       1512, 2228, 1665, 1513, 2229, 1666, 1514}], 
      Line3DBox[{1516, 1713, 1714, 2358, 1515, 1735, 1835, 1736, 2359, 1517, 
       1737, 1836, 2264, 2147, 1518, 2148, 2339, 1837, 1738, 1519, 1099, 1838,
        1741, 1520, 2316, 1744, 1839, 1745, 1521, 2317, 1750, 1751, 2342, 
       1522, 1753, 2046, 1754, 1409, 1523, 1755, 1756, 2318, 1524, 1757, 2265,
        2153, 1525, 2155, 2266, 1759, 1526, 1123, 1761, 1527, 2319, 1763, 
       1764, 1528, 2320, 1765, 1766, 1529}], 
      Line3DBox[{1543, 1719, 1718, 2308, 1542, 1774, 1144, 1541, 1762, 1848, 
       2344, 2157, 1540, 1760, 1847, 2343, 2156, 1539, 2154, 2270, 1846, 1758,
        1538, 2152, 2269, 1845, 1957, 1956, 1537, 2322, 1954, 1955, 1844, 
       1953, 1952, 1536, 2321, 1950, 1951, 1843, 1949, 1948, 2369, 1535, 1946,
        1947, 1752, 1073, 1534, 1749, 1842, 2341, 2151, 1533, 1748, 1841, 
       2340, 2150, 1532, 2149, 2268, 1840, 1747, 1531, 2145, 2267, 1746, 1717,
        1530, 2360, 1716, 1715, 1938}], Line3DBox[CompressedData["
1:eJwV0Mkuw2EUhvGvmqALO3NYuADDNZhnItyAnQ0icQXa6ki4CCKmhAQ3YtjY
CTFL29jy+xZP3nOe93xN+u9ZXltYTYQQVpCqDyHTYGgMISt/7Gn5jJlUCFv2
P/MBbnGIEbzgFWn9o2zxvg2tGLXvyF7vP8wZN29ynbvCmDnLNWHDfo1xbhuf
MfkKcvyg3zjiJpDHF3K6hK6AIf0xN4mnZAhV3Tum7Cfo0+ftdW5P7Xc4wzSK
XL++oK/hnmvnHuJ/x4CuyDdjk7/BLF+yd5g7sehmT87Fb4cKyvpvuc8v6btl
F+bjW1Tj93GT5EoYdnPJneOXL8sads0X8h8dkDue
       "]], Line3DBox[CompressedData["
1:eJwNzEkuRGEUBtBrgNJEU09haqjZgK5KO2LEDmoBVREi0feimUiQsAMxYiXa
sSpdNCG24AxO/vt9977XkS9OFSoiIk97VcRJdcQpx1xzxXhNRJvdmvmddcZI
UhEtTNsfeVvd/DFq16Ob12XkX0Z03bo5XSLPessM63/kNKvmNybd7dgNmQ95
5IBmN9v6rP2rvEKOB9L6e2+Tm8R+yfzCMln2uCNTGdHoZsH8zCKDXHLLhG/3
/avBzTcDui7djK5e/qJf16kr6urkgrdEn/5TruXJXKZEL1vcsEnKftd9zj82
5A/53HvGBf+TVjF2
       "]], Line3DBox[CompressedData["
1:eJwVzkkyQ3EQB+COIYO9BapU4QSs2FmxJBHjMgdgiRNYGWKI4RymJMZjGA6g
WGURRKrwvcVX3b/u/r96Q6W1wmoqIkr0pSOuMhHXVDhnPBsxlYvoUi/kQfVS
zdPkkz3v3tSGWlBH3Zf1H/p191Xm9Ptm/WzINYpmB3KLbXnau6rZPDt8cWjX
bTdjV5OfqLPALt9M2E/at90+y6+8sJj8Gy3eOyPS7m70d9zy537LrNfbH/lI
/qXJkjxmXtEPsOmuzrL5cTLTDzOSfJMV8xPzRvJfct7bnJolZVamzambjNms
/b38QAePnNn12P0DGHs47A==
       "]], Line3DBox[CompressedData["
1:eJwVzjlOgmEUheFLEPAPWpBYWIhigivARtyAsaSgQRxAW22wcViHhbOrcAho
cI7DXqw0RhMfizfvPfc7N/kmWxu19VRE1DCWjThHdTAik0SkcxGf8qw8Ig/I
X3KDK/K+uYgt710s2B/I49iWe2jaHcoT5rqbMk/h227RWx95+ZZzGNW543v8
6CzxA4Z0HnnOe8JPeMavzjK/oKDzyvM6eX7DOy50VvgjHTHMgRam9Y7+/4Yd
t9do2x/LJezKN1i1O5E7POPm0rxmPuVNrtpdmc+wJ/8B+Kspng==
       "]], 
      Line3DBox[{1569, 1810, 2108, 2333, 1894, 1811, 2109, 2334, 1910, 1797, 
       2110, 2326, 1570, 2174, 2241, 1699, 1571, 2327, 1798, 1700, 1572, 2329,
        1800, 1701, 1994, 2377, 1802, 2063, 2080, 2081, 2391, 1812, 1804, 
       2088, 2111, 2330, 1813, 1806, 1895, 2112, 2331, 1814, 1807, 1897, 1017,
        1573, 2175, 2242, 1899, 1702, 1574, 2332, 1808, 1901, 1703, 1911, 
       2363, 1809, 1903, 1704, 1912, 2364, 1724, 1705, 1575}], 
      Line3DBox[{1577, 2113, 2273, 1576, 2114, 2274, 1578, 2115, 2275, 1579, 
       1021, 1580, 2243, 1706, 1581, 2244, 1707, 1582, 2386, 2061, 2064, 2062,
        2393, 2195, 1583, 2090, 2086, 2089, 2087, 2392, 1584, 1815, 1896, 
       1816, 2335, 1585, 1817, 1898, 1818, 2336, 1586, 1215, 1900, 1819, 1587,
        2337, 1820, 1902, 1821, 1588, 2338, 1822, 1904, 1823, 1589, 2245, 
       1708, 1590}], 
      Line3DBox[{1592, 2116, 2276, 1591, 2117, 2277, 1593, 2118, 2278, 1594, 
       2119, 2279, 1595, 1033, 1596, 2246, 1709, 1597, 2247, 2120, 2280, 1598,
        2121, 2281, 1599, 2122, 2282, 1600, 2123, 2283, 1601, 2176, 2357, 
       1905, 1824, 1602, 1223, 1906, 1825, 1603, 2248, 1710, 1604, 2249, 1711,
        1605}], 
      Line3DBox[{1607, 2124, 2284, 1606, 2125, 2285, 1608, 2126, 2286, 1609, 
       2127, 2287, 1610, 2128, 2288, 1611, 1047, 1612, 2250, 2129, 2289, 1613,
        2130, 2290, 1614, 2131, 2291, 1615, 2132, 2292, 1616, 2133, 2293, 
       1617, 2134, 2294, 1618, 1055, 1619, 2251, 1712, 1620}], 
      Line3DBox[{1634, 1830, 1230, 1633, 2307, 2144, 1632, 2306, 2143, 1631, 
       2305, 2142, 1630, 2304, 2141, 1629, 2303, 2140, 1628, 2179, 2302, 1829,
        1627, 2365, 1828, 2301, 2178, 1626, 2300, 2139, 1625, 2299, 2138, 
       1624, 2298, 2137, 1623, 2297, 2136, 1622, 2296, 2135, 1621, 2177, 2295,
        1826, 1827}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{763, 930, 2196, 764, 943, 790, 2256, 958, 805, 1092, 2313, 
       972, 819, 1093, 2359, 1279, 984, 831, 2267, 1072, 1282, 473, 644, 2016,
        643, 1377, 655, 2025, 658, 657, 1383, 681, 2038, 682, 499, 1184, 2324,
        1005, 855, 1209, 1285, 2334, 1012, 863, 2274, 1019, 874, 2277, 1030, 
       887, 2285, 1043, 902, 2296, 1058, 917}], 
      Line3DBox[{765, 931, 2197, 766, 944, 2207, 791, 1086, 959, 806, 1087, 
       2312, 973, 820, 2264, 1094, 985, 832, 2268, 1105, 991, 840, 2271, 1131,
        1384, 1386, 1387, 2349, 1391, 1390, 1149, 1388, 1000, 2353, 850, 1167,
        1006, 2355, 856, 1185, 2326, 1013, 864, 2275, 1020, 875, 2278, 1031, 
       888, 2286, 1044, 903, 2297, 1059, 918}], 
      Line3DBox[{767, 932, 2198, 768, 945, 2208, 792, 1088, 1089, 2218, 1235, 
       1090, 1091, 1236, 2339, 1095, 1096, 1239, 2340, 1106, 1107, 1247, 2345,
        1132, 1385, 1133, 2230, 1252, 1150, 1389, 1151, 2233, 1258, 1168, 
       1169, 2237, 1263, 1186, 1187, 2241, 865, 1021, 876, 2279, 1032, 889, 
       2287, 1045, 904, 2298, 1060, 919}], 
      Line3DBox[{769, 933, 2199, 770, 946, 2209, 793, 960, 2219, 807, 1097, 
       2314, 1098, 1237, 1099, 1100, 1240, 2341, 1109, 1110, 1248, 2346, 1135,
        1136, 2231, 1253, 1153, 1154, 2234, 1259, 1171, 1172, 2238, 1264, 
       1188, 2327, 1189, 866, 1022, 2243, 877, 1033, 890, 2288, 1046, 905, 
       2299, 1061, 920}], 
      Line3DBox[{771, 934, 2200, 772, 947, 2210, 794, 961, 2220, 808, 1101, 
       2315, 1102, 1238, 1103, 2316, 1108, 1104, 1114, 1073, 1134, 1369, 1368,
        1370, 2379, 1336, 1337, 1152, 1335, 1334, 2370, 1254, 1349, 1350, 
       1170, 1348, 1347, 2375, 1260, 1445, 1446, 1444, 1452, 2390, 1451, 1265,
        1191, 2329, 1192, 867, 1023, 2244, 878, 1034, 2246, 891, 1047, 906, 
       2300, 1062, 921}], 
      Line3DBox[{773, 1081, 1082, 774, 948, 2211, 795, 962, 2221, 809, 974, 
       2226, 821, 1111, 2317, 1241, 1113, 1243, 1328, 2369, 1329, 1137, 1327, 
       1410, 1326, 1371, 1301, 1392, 1302, 1155, 1339, 1414, 1338, 2371, 1255,
        1303, 1398, 1304, 1173, 1352, 1423, 2383, 1351, 1376, 1318, 1402, 
       1319, 1190, 1362, 2328, 1361, 1266, 1194, 1364, 2377, 1196, 1431, 1429,
        2386, 1430, 879, 1035, 2247, 892, 1048, 2250, 907, 2301, 1226, 1228, 
       1276}], 
      Line3DBox[{777, 937, 2202, 778, 951, 2212, 798, 2259, 965, 812, 2262, 
       977, 824, 1115, 2318, 988, 835, 2269, 1116, 1378, 1379, 1380, 1381, 
       2380, 1295, 1140, 1416, 1341, 1374, 1342, 2351, 847, 1353, 1375, 1159, 
       1354, 1313, 1314, 2325, 1400, 1315, 1075, 1199, 1009, 859, 1200, 1212, 
       2331, 1016, 870, 1213, 2335, 1026, 882, 2282, 1038, 895, 2291, 1051, 
       910, 2303, 1065, 924}], 
      Line3DBox[{779, 938, 2203, 780, 952, 2213, 799, 966, 813, 2263, 978, 
       825, 2265, 1117, 989, 836, 2270, 1118, 994, 843, 2272, 1141, 998, 2352,
        848, 1160, 1003, 2354, 853, 1176, 1010, 2356, 860, 1201, 1017, 871, 
       1214, 2336, 1027, 883, 2283, 1039, 896, 2292, 1052, 911, 2304, 1066, 
       925}], Line3DBox[{781, 939, 2204, 782, 953, 2214, 800, 967, 2222, 814, 
       979, 826, 2266, 1119, 1120, 1244, 2343, 1121, 1122, 1249, 2347, 1142, 
       1143, 2232, 1256, 1161, 1162, 2235, 1261, 1177, 1178, 2239, 1267, 1202,
        1203, 2242, 1271, 1215, 1216, 1274, 2357, 1221, 1222, 897, 2293, 1053,
        912, 2305, 1067, 926}], 
      Line3DBox[{783, 940, 2205, 784, 954, 2215, 801, 968, 2223, 815, 980, 
       2227, 827, 1123, 1124, 1245, 2344, 1125, 1126, 1251, 2348, 1145, 1436, 
       1146, 1437, 2388, 1257, 1438, 1448, 1163, 1450, 1164, 2236, 1449, 1262,
        1179, 1180, 2240, 1268, 1204, 2332, 1205, 1272, 1217, 2337, 1218, 
       1275, 1223, 1224, 898, 2294, 1054, 913, 2306, 1068, 927}], 
      Line3DBox[{785, 941, 2206, 786, 955, 2216, 802, 969, 2224, 816, 981, 
       2228, 828, 1127, 2319, 1280, 1128, 837, 1144, 1250, 1373, 1372, 1435, 
       2387, 1433, 1434, 1394, 1440, 1439, 2389, 1443, 1441, 1442, 1395, 1427,
        1426, 2385, 1428, 1357, 1358, 1283, 2361, 1076, 1269, 1206, 1286, 
       2363, 1207, 1273, 1219, 2338, 1220, 884, 1040, 2248, 899, 1055, 914, 
       2307, 1069, 928}], 
      Line3DBox[{787, 1084, 2311, 1085, 788, 956, 2217, 803, 970, 2225, 817, 
       982, 2229, 829, 1129, 2320, 1246, 1130, 838, 1074, 2308, 1147, 1406, 
       1405, 1321, 1344, 2373, 1396, 1421, 1420, 1165, 1418, 1419, 1417, 1343,
        2372, 1345, 1316, 1401, 1317, 1181, 1356, 1425, 2384, 1355, 1182, 
       1359, 1360, 1284, 2362, 1077, 861, 1078, 1287, 2364, 1079, 872, 1028, 
       2245, 885, 1041, 2249, 900, 1056, 2251, 915, 1230, 1231, 1232}], 
      Line3DBox[{916, 1057, 1225, 2295, 901, 1042, 2284, 886, 1029, 2276, 873,
        1018, 2273, 862, 1011, 2333, 1270, 1208, 854, 1004, 2309, 1183, 1323, 
       1322, 849, 999, 2374, 1422, 1346, 1166, 1300, 1397, 1299, 844, 2381, 
       995, 1413, 1298, 1148, 1297, 1382, 1296, 2367, 839, 990, 1325, 1281, 
       2360, 1071, 830, 983, 1278, 2358, 1070, 818, 971, 2260, 804, 957, 2255,
        789, 942, 2252, 762, 929, 1080, 1233}], 
      Line3DBox[{922, 1063, 1320, 1288, 2365, 1227, 908, 1049, 2289, 893, 
       1036, 2280, 880, 1024, 1454, 2393, 1456, 1455, 868, 1014, 2391, 1447, 
       1210, 1195, 857, 1007, 2376, 1363, 1193, 1307, 1403, 1306, 851, 1001, 
       2368, 1305, 1174, 1157, 845, 996, 1156, 1291, 2323, 1290, 841, 992, 
       1411, 1289, 1138, 1331, 2321, 1330, 833, 986, 1242, 2342, 1112, 822, 
       975, 2261, 810, 963, 2257, 796, 949, 2253, 775, 935, 2310, 1277, 1367, 
       1366, 1432}], 
      Line3DBox[{923, 1064, 1229, 2302, 909, 1050, 2290, 894, 1037, 2281, 881,
        1025, 2392, 1453, 869, 1015, 2330, 1211, 1198, 858, 1008, 2378, 1365, 
       1197, 1312, 1404, 1311, 852, 1002, 1424, 1310, 1175, 1309, 1399, 1308, 
       846, 2350, 997, 1415, 1340, 1158, 1294, 1393, 1293, 2366, 842, 993, 
       1412, 1292, 1139, 1333, 2322, 1332, 834, 987, 1324, 1409, 1408, 823, 
       976, 2382, 1407, 811, 964, 2258, 797, 950, 2254, 776, 2201, 936, 1083, 
       1234}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
B0tdEM+dk3bt6XdqwObn67DNh5nA+87IoMslAhbniQ5lfKuDd/6b/PobRiH9
9xlvh8IokHZLOL4nqgFiW+sS1F1HwVahc5bVtheQPvWnn/tRLWS/TJ5tt4gJ
lw5ah9vLvYbHSsvUltyugOr5JEG9iQnqkinM87cTYWpVyK+/slng/KPQe2sw
C7apLGlatSYJz1Ef/r3d7//93Rvp//7uzQdfu5VTslnE9dchL4znST/YiPGL
P9lr0/xk7UaDN5h/h4b6KOa3cVBg0nrIopannFgPT53pc6zHq22N8qGVDeSQ
Y8GRpqej4LE0NYKDJx7CkkeGx80aCHFM6fpybxSmVcejnii9ADPzc18pDmTH
rd++iMMieOqFOBg+FRykuBGxqXmhiNsex8v6iFvRNuuGm2m1MMsqn7WDhwmz
XtYn2s5NBLYFArZLPjTDqt1HL2/PHoFdq1f/gJAk+PtkbfK1H+3guXjwR0To
MHAWd5oyGO9BQ05qYZFRMSjtyaiuGGZCrsozpWsns5Bvc//X79Uo56kPV7oV
k99aj3Uj6TlaZlgrX2eYBQ8TmxVWszWQefe67BdcHIUovajExx8J7C7crCIp
10bCDoprrZ01ArqxizbeT0yFczz+ljfUO4jKRUPnN+eHYTi+7Lziu2Qwv3rc
WTewnWj5xmWafR6GO0bCyzuq3kPi7jk+r0KbyXXNX9yPC0Yg6nrDz8HQJAhQ
CaqkOJCa+7O+IQ43tVYmIQ45mYsmC7Vq4fNXPfbBsVEodlSSKRxNh5/bwq82
qXaCTdP6ykMxQ7DO8F5VQBEBY3fFRXdW9sKGQwtyul70w5Ph1rJJti8UB1fu
//V7Mspspwzk9teSLInHIbbbR2Cq/tYX5Ru1IJpQo6mb2UlMzZ4Fss4OQk9H
82GFFRUw7TwsKavWS6wuEq0OsX44+jjyjAVHAVgvOHB68dJOsu9Rr8PSzCG4
t2i7p0kZgeQTYUO0fsI80zML6/9b8VkW65d61y41r6wK1r3KZnOk5+Lk5zVt
eyQqwPx4hkbXlWFoXLQrtU+mDWp5FvuL2hTR+vdI/q/fafn2ktNaPbWZxJ4T
KIjO6ABvzgCOFY79UDytCsPHhsk2boVlc82bQY3Xk6xlVcHOncuU3fIaYc0c
/lTtjDuMO/9kv+w5PPrfv8fank6/U/7//j7JxM8H51cz6knD1bH18zV1GMb8
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
ZnxfUt937Ed82FtQY4bj4j12+giOa5DR2ZvF6OxxMzp7v8fY+Ri7E6O/l83o
72kx+nt3x+jy7WXsJ5fc1KDzlgRGGq7DeXuh4xRn3hIbpSLKg8jNibpCyINS
lLw5POjDIWd8v2R+dyrn/W59cKAZ3+/n50LIU0hcbyaHp6zPW8zhKXqvPprS
9UIKxhtNxfXiLpI9A9eLZWeiOOVfJPXGND7kX6WTnosi/ypS0sjDfJXpq30Q
87C1UhXBfDXnyZRplMeRUJ4SeeRxnl3RhZjfLiuJHkIe8T0qqC8qrQz4vzam
I4/4R8dv+Rgdv1HGPp2x8zL2lqBvGa79X+C4UpDcBcs2EG1NkTx0uRKcFlr/
pPwCKgcrXSm/ANdw4RrkF+L+45Qo34Hc8UE1yHcyF+84g3wnSnCFu+DravjB
3dVQt74TtKut4u47NCGPuPy/6fv9PaWYTtuTOydKK7A965nqK2w/wnzfbcl8
3z3KfN9dP/f6b+Q7OQVcDuiP6pZtuejPP3p9DmP0+twY+0XGnsnY203Pv8X6
ouwYgjwI9udm8WP96m6aqU/jSS70SfdjPDX4cnMxni4zVyuWm1M8eubgxkNT
cmF6/cC0jqJCcDVc1/L0exlZ1TknUfxnH/yc9+yQc34mfHDtXlf5sQyUVcxM
hBy7wTb9V6Z0Sz2UpJbL034A7H760H5IsSLhxn6yGP09d0Z/bwOjv5fB2EMY
uxxjv8Hct3Rh7lv2M/ct93l4bsT3YivMp87VkUVmLay0wPdSJ2nKwvfYGLE2
HXli1HaBCozbx6EKR7tT1bDMtV89MLsA9CLHzyo068X8sBN12GzH6PL9Tz7c
+l9eHL80PI/2Q9xz/8pjPw6v5Xmxn3++wyphvsM6w3yHFbAySRH5soV2jyz6
KXFT8hD6+Y/OXhWjszfA6Oz9Y28bY/9tPBnjSebKB77EeJ4x/cCP8bzqZqL1
3aGPxA1cOnqnq4xMt5qzfs7ZAngyX+ZjxccyIhN18QK+FxvrtZX4XuxSZoxS
O2h6vHKidsLnH2uJ9oXv+z/g/oNwtEANXdfkXeWSOlzXJow+3jCjj2fD6OMd
Y+yjjP0SYzcec79Ugrlfqj/tTQjm7aIFJho0b5NrCk84+xIzpUM3Y57Xu37a
Cfny+y8TDTAfPvvgdx3fl/fUudk0zgSuywkw70sN39fSMbp517vPZ+J7ydix
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
a+Qjx1o3HkS8VNv6exjx0gQLrfM4/2u4hG1x/msfUGjAdbH25tt7iKNkvoxc
RHvSz+XZyGtEngukIu6q7/qgiP3ELpG8hv4M//L3oc8ln84cE8Lndt8NOo3+
NH7d/QLtK/foz0L776urNXFdH7K08sD3cufq8QM4Lvwpkf9Nx4zaOTxRg+GJ
PxmeyMWlvALPxcyY877pzHkfba+BuNeZ4SlHGZ5SMdFcccfxGsKzbU4I/8N2
4L1qpPj5fAtUfF0fjedoXLJ6yf3xdfA8vckVz9FexOyUW3GphrSWdc1e/qAM
8uUeLow+2/NfHnphjM6Yhd1SKTzXMz+vmG2wow9alZRK8FzPp2RdRfHECjD4
soknkv7/RVn/ul17q6FZ67C679dS8PSe7Z3h0QFEW3u30IVWSP8Y/hHPHzWW
/Mlxl60iWrsdovD8cUNL0yxs37+YFNL2hEujaza2X6nxwYr6DxOKM/LR/ykd
cU/Rf65lBl8lL9WA8yDvYvR/j8hxafRfrud2VM6zz7DPYb1R1oIw0rRe5j6e
V8b0fPx92LUK0p+2vMhem00EPAv1wib2YZ7n8AiZMTxiHJcy556qDHMumcmc
S9L4c/CqJYNX5Rm8qvIgeAjPSX8PnDqIzzUS3GWHz227UL7liGsVefvhrwc+
d7fgmp343Mk9YlIY/23P1Q2o/8Rk0Hsm+v9ErT8Iz3NvTDuct2xcK5F8s/I+
nueuCLddgO9328WXafT9Eg3uX8vw/Woz+loFjL7Wc0Zf6x97+f+hu2XH7D+n
M/vPGlKZw2LJtWSkd2MTvhe1QalGfC8dX5RMfb6WErk62S/4XhSE2pbjezkW
ftKc+gnTCm3K0M+NxR2P0c81bxy61I/XwLTUgTz08/sDh9Xo59j5P8DM/4r5
10eRB32M0OHF+9Kj0NiMPOh3u5cyno9LCD/IIg/6SG2epBiej1+QtdQOGV8G
w+avMi6N9pHixmzHcPkcyKsPHEFcWhaQ8xzruNnZSn+s46wlly2wfdunjA+0
PYyK7gnC9j9yQm+i/6tNVOLx3Fxxp2Ak+v9a8DQfjTNUuZrH4DrK4+/Zhv7b
KJKAAONK0Mss7vA90QO/jO1t8fxXSVbPTrCuCp4pHohtuNIFZ6PaPXbG1SM/
5dxLv8/cH9jH3B+g9is4f3Yz653NrPeWpj2FeL5seO9wE/bPN6v/EvZv/5pE
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
ocivvQwuq6H/Mz85aaD/5qaGuG9A+Bx/474BKT1oNRfHy/2nJxL5tfDuUR6M
j/br+5z4XB8yIv4GxWTZX8dFR+j72uZU+kcwxxECQ1g7gyYVA0thp1rzEAt0
X/X8/Bx2B6rXDuqNyBWC1MrY50Wz2dCkcyqSvfEeeK3Vs56skAeDotsd5LSp
/d2VH6lJrpB7gk/hdm4GlFqXZzj6sOHS/pOtywfdwHiH1PpR6TdwMOaTpXAT
G5Qzcvt/57rDAKP/cIfRf1Bn9B/ULqt4j1+TTqYfba2sjWBD1sXfl9hz3KF5
8jDfxQm55Pq06EcClEe//vUkv2fifch9c+2J7fEConKEf5+xBBsCPYZatrne
g32iJvs+eBQRk886Vau42SDlfrsgevQO+FvwlE5aWUzkLc7ey/rJgl6xVyon
rt2GaHOrjjidYmL1Ia3G+SsLgo9Uinlz3YR8Afer/o6lYNF2q+eFHwvWlknN
e5z4CMyK2nnJp2IYCOIxW0z5ZohIitKI9hOwE226OuFSHiS3msV92cmGB6cq
endVPYNJ5mHTAh0IRMtcX7YhhQ0zagb32lX5QvUYfYYURp+h0rJAd0ZbITm4
CPSFJ7PhpdVbuafDT+Ddms0iChkl5OTLPW/YSZRfu2cfDDT3hvoj9ocvUx6R
8D7GsjKABUHfXaUD2Z4w7/LgreezS0nf4cGd52NYEJnGpxr38CHszVlQ5Xq/
hHDrluQHUj718qS8T5KuO3wtbvjolF0Br0MUM+SnsyBOXico4X4grDe+ncUr
WApVH0aXV4eyYPb0craoWyic7H4et64nG+K2Tr7zyYoN9b7VoSFbI0B5c2BA
jnAl+RQjs0+DmwXXW//4D/IHQte06BmbeSpJl+zWUB5eFpzIP7PFKcgfDH2i
djbsLSfuV36d5tvHgq+zjh5b2vscdq6SuultX0rOnVm/aDuN/9+MO9P+pj2F
PI/YsxLzaknO0I2lnn29oK29eVJIfSR8N7qW/k3gMzmVyXN4S2EfnPi978hR
gXCwuXj4ZfnLUvIo0iKo1JMFUpJa4yevDAaB6KQGlZ9twMPFpZ3UdSMlXsL2
21S1DkiMt514KwRxsnLfGsNjKeywsv41hqXQwl35NGQifgdgX6HpoJtS90JL
YoZu0b9x9U7Eq3oMrnbJFv4dXNuD/VzpczicEiNlYlR3vREIe/qcQ0/rsP34
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
90wey7uHI16dXR6/HPHqY9PXrXiv6WHpErfb93pIVc2SWLzns/nVVLSTupDb
HPtWaxOOfZ1c2Q/6vkjgr/Zz+L7S57/ivC/ToJgc3HeVaRyIu+pYDx3pgxm4
7zp46eVxx9ov0C2t3HalvQ6KDS/NOGHXCsIPo9j+S8LAzcDzcFZ7Fdw/PGyU
atUHj5K/B8i1ZMHjeUvCLcurgUfl+7GVGb2wg99I5wx3GelZuHE0K60WLLQE
7zfL98B9dTVP3Nf1zdz9/9V15fFUN98fbUJSeAiVRAtJaUFhtKgsIaSHFopK
tiTaqJRshcqSJEuhRUVEZGmUrci1b5GkssW9RQlZfnN8p56e+3v697zua+58
zjlzznvmvGeOXwTBg3GzJUvhXNdghG86x5xmPE3fKG+neCfq7rIYgfPYQz/2
Kx02+4ADxK5ubJrRhgx3GLMGDpWjB3wFE++2PEL9eWLjbK8w0X3/Jc+jpSrQ
WtX4RWQctNekKRXGydnV2wPjlG2L1SfjIH+h4eUwjnFOQTOM85Hu77g5NMb2
dxxD/9vfPaP8HC4OjRI4Dzem/Jxe+vtxHJLD8PuvdD/4M86TONkB8VaPxvnO
D6sEiR6QR83nSQVED8lmfKGghzAa/zlp/Heh8b+2ZP4HYhd8+KFCJNjFaxx3
Cthlk1aMK7ELfpt89xXYxSGgjQPsIvcrPrtPhvgcS+PzgV/7RI1ImKcX3Scy
rCT+Bvs6NrRLnWhtxMLTeyfCOLaB14LAjhoCkweJHfFX26dbwI63RLI3gh2j
fJJ1yPwxN+91N5j/qoKwWWCX9eI+u4k+8YyQlHrQp9WowZ2MxbdRssLV27vy
WeiJ3NdlTtpZ6L2jxiR7si8bnPjVFs4HpqC5LNiXVfcptMN5u3Ki8P7NHt3I
ZrrYSThvt5cxy2qXL0AWZj17T59gogitswuEecoQZ6/aPDhnyD8+4Az7u76S
oiIYZ1XycPiTxbfxwcTCO+R/sXPjY2H432qZi2fJ+PiV8cWjMD5HcYI/jB/U
Pvl7m3wB5j+7wQHG1/3LRh7G50sJLoZ+8Zzp/Vx2WzqQalhxLJyLClI5B5Wr
UPlc08ijsP8N0ZTcSva/6IPcxlDY/86g8itU3krlr4+WOUIfeeaWa0fJvhi9
j3sUA/ti7mP/ln+g8sdDxltgH/3ZleEMcpeMsGiQf2CTO1P5fo2TcdBHfmLE
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
8f8AvzbujA==
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{334.9562572799819, 156.19552401772353`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-1, 1}, {-1, 1}, {0., 43.15065336730009}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.4118561337759859, -3.33385342627697, 0.40718037424758746`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.7319271870738487`*^9, {3.731927383977241*^9, 3.731927437571806*^9}, 
   3.731927559329048*^9}]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4462, 125, 97, "Input"],
Cell[5045, 149, 4598, 135, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9680, 289, 5167, 146, 131, "Input"],
Cell[14850, 437, 5279, 158, 127, "Output"]
}, Open  ]],
Cell[20144, 598, 120, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[20289, 604, 4264, 123, 97, "Input"],
Cell[24556, 729, 4596, 135, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29189, 869, 5800, 161, 131, "Input"],
Cell[34992, 1032, 5815, 174, 128, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40844, 1211, 279, 4, 28, "Input"],
Cell[41126, 1217, 31330, 839, 420, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72493, 2061, 83, 2, 28, "Input"],
Cell[72579, 2065, 3914, 121, 83, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76530, 2191, 126, 2, 28, "Input"],
Cell[76659, 2195, 15532, 446, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92228, 2646, 84, 2, 28, "Input"],
Cell[92315, 2650, 4973, 144, 127, "Output"]
}, Open  ]],
Cell[97303, 2797, 3455, 103, 129, "Input"],
Cell[100761, 2902, 8259, 262, 177, "Input"],
Cell[CellGroupData[{
Cell[109045, 3168, 829, 19, 28, "Input"],
Cell[109877, 3189, 1310, 21, 35, "Output"]
}, Open  ]],
Cell[111202, 3213, 5910, 164, 131, "Input"],
Cell[CellGroupData[{
Cell[117137, 3381, 1307, 23, 28, "Input"],
Cell[118447, 3406, 1276, 26, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119760, 3437, 299, 7, 28, "Input"],
Cell[120062, 3446, 473, 7, 32, "Output"]
}, Open  ]],
Cell[120550, 3456, 2871, 71, 80, "Input"],
Cell[CellGroupData[{
Cell[123446, 3531, 951, 17, 28, "Input"],
Cell[124400, 3550, 20332, 344, 216, "Output"]
}, Open  ]],
Cell[144747, 3897, 8207, 261, 177, "Input"],
Cell[CellGroupData[{
Cell[152979, 4162, 243, 5, 28, "Input"],
Cell[153225, 4169, 4567, 145, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157829, 4319, 83, 2, 28, "Input"],
Cell[157915, 4323, 3916, 121, 83, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161868, 4449, 84, 2, 28, "Input"],
Cell[161955, 4453, 6864, 210, 157, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168856, 4668, 83, 2, 28, "Input"],
Cell[168942, 4672, 5027, 159, 111, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174006, 4836, 84, 2, 28, "Input"],
Cell[174093, 4840, 9082, 271, 205, "Output"]
}, Open  ]],
Cell[183190, 5114, 114, 2, 28, "Input"],
Cell[183307, 5118, 7183, 215, 201, "Input"],
Cell[CellGroupData[{
Cell[190515, 5337, 195, 4, 28, "Input"],
Cell[190713, 5343, 5218, 157, 127, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195968, 5505, 80, 2, 28, "Input"],
Cell[196051, 5509, 15511, 445, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211599, 5959, 83, 2, 28, "Input"],
Cell[211685, 5963, 9497, 272, 164, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221219, 6240, 85, 2, 28, "Input"],
Cell[221307, 6244, 3235, 99, 83, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224579, 6348, 86, 2, 28, "Input"],
Cell[224668, 6352, 5098, 149, 157, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229803, 6506, 85, 2, 28, "Input"],
Cell[229891, 6510, 5606, 175, 133, "Output"]
}, Open  ]],
Cell[235512, 6688, 295, 7, 28, "Input"],
Cell[CellGroupData[{
Cell[235832, 6699, 210, 4, 28, "Input"],
Cell[236045, 6705, 4411, 127, 99, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240493, 6837, 79, 2, 28, "Input"],
Cell[240575, 6841, 11119, 302, 187, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251731, 7148, 84, 2, 28, "Input"],
Cell[251818, 7152, 2937, 90, 83, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254792, 7247, 85, 2, 28, "Input"],
Cell[254880, 7251, 4581, 140, 133, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259498, 7396, 86, 2, 28, "Input"],
Cell[259587, 7400, 2685, 79, 84, "Output"]
}, Open  ]],
Cell[262287, 7482, 3144, 93, 129, "Input"],
Cell[265434, 7577, 2548, 79, 85, "Input"],
Cell[CellGroupData[{
Cell[268007, 7660, 892, 16, 28, "Input"],
Cell[268902, 7678, 56579, 937, 218, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325518, 8620, 1425, 39, 46, "Input"],
Cell[326946, 8661, 19676, 334, 230, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[346659, 9000, 2602, 77, 96, "Input"],
Cell[349264, 9079, 2472, 77, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351773, 9161, 85, 2, 28, "Input"],
Cell[351861, 9165, 2279, 75, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354177, 9245, 3197, 95, 129, "Input"],
Cell[357377, 9342, 2984, 91, 83, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360398, 9438, 205, 4, 28, "Input"],
Cell[360606, 9444, 2937, 90, 83, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[363580, 9539, 85, 2, 28, "Input"],
Cell[363668, 9543, 2936, 90, 83, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[366641, 9638, 86, 2, 28, "Input"],
Cell[366730, 9642, 4581, 140, 133, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371348, 9787, 85, 2, 28, "Input"],
Cell[371436, 9791, 2372, 78, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[373845, 9874, 291, 6, 28, "Input"],
Cell[374139, 9882, 629, 17, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[374805, 9904, 1582, 45, 68, "Input"],
Cell[376390, 9951, 2060, 41, 324, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[378487, 9997, 591, 16, 28, "Input"],
Cell[379081, 10015, 128958, 2111, 171, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
